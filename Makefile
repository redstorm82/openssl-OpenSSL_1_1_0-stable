##
## Makefile for OpenSSL
##
## WARNING: do not edit!
## Generated by Configure from Configurations/unix-Makefile.tmpl, Configurations/common.tmpl

PLATFORM=android-armeabi
OPTIONS=--prefix=/home/shenshaohui/openssl-install/arm --cross-compile-prefix=/opt/ndk/android-ndk-r13b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi- no-asan no-asm no-crypto-mdebug no-crypto-mdebug-backtrace no-ec_nistp_64_gcc_128 no-egd no-fuzz-afl no-fuzz-libfuzzer no-heartbeats no-md2 no-msan no-rc5 no-sctp no-ssl-trace no-ssl3 no-ssl3-method no-ubsan no-unit-test no-weak-ssl-ciphers no-zlib no-zlib-dynamic
CONFIGURE_ARGS=("android-armeabi", "no-asm", "--prefix=/home/shenshaohui/openssl-install/arm", "--cross-compile-prefix=/opt/ndk/android-ndk-r13b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-")
SRCDIR=.
BLDDIR=.

VERSION=1.1.0d-dev
MAJOR=1
MINOR=1.0
SHLIB_VERSION_NUMBER=1.1
SHLIB_VERSION_HISTORY=
SHLIB_MAJOR=1
SHLIB_MINOR=1
SHLIB_TARGET=linux-shared

LIBS=libcrypto.a libssl.a
SHLIBS=libcrypto.so.$(SHLIB_MAJOR).$(SHLIB_MINOR) libssl.so.$(SHLIB_MAJOR).$(SHLIB_MINOR)
SHLIB_INFO="libcrypto.so.$(SHLIB_MAJOR).$(SHLIB_MINOR);libcrypto.so" "libssl.so.$(SHLIB_MAJOR).$(SHLIB_MINOR);libssl.so"
ENGINES=engines/capi.so engines/dasync.so engines/ossltest.so engines/padlock.so
PROGRAMS=apps/openssl fuzz/asn1-test fuzz/asn1parse-test fuzz/bignum-test fuzz/bndiv-test fuzz/cms-test fuzz/conf-test fuzz/crl-test fuzz/ct-test fuzz/server-test fuzz/x509-test test/aborttest test/afalgtest test/asynciotest test/asynctest test/bad_dtls_test test/bftest test/bio_enc_test test/bioprinttest test/bntest test/buildtest_aes test/buildtest_asn1 test/buildtest_asn1t test/buildtest_async test/buildtest_bio test/buildtest_blowfish test/buildtest_bn test/buildtest_buffer test/buildtest_camellia test/buildtest_cast test/buildtest_cmac test/buildtest_cms test/buildtest_comp test/buildtest_conf test/buildtest_conf_api test/buildtest_crypto test/buildtest_ct test/buildtest_des test/buildtest_dh test/buildtest_dsa test/buildtest_dtls1 test/buildtest_e_os2 test/buildtest_ebcdic test/buildtest_ec test/buildtest_ecdh test/buildtest_ecdsa test/buildtest_engine test/buildtest_err test/buildtest_evp test/buildtest_hmac test/buildtest_idea test/buildtest_kdf test/buildtest_lhash test/buildtest_md4 test/buildtest_md5 test/buildtest_mdc2 test/buildtest_modes test/buildtest_obj_mac test/buildtest_objects test/buildtest_ocsp test/buildtest_opensslv test/buildtest_ossl_typ test/buildtest_pem test/buildtest_pem2 test/buildtest_pkcs12 test/buildtest_pkcs7 test/buildtest_rand test/buildtest_rc2 test/buildtest_rc4 test/buildtest_ripemd test/buildtest_rsa test/buildtest_safestack test/buildtest_seed test/buildtest_sha test/buildtest_srp test/buildtest_srtp test/buildtest_ssl test/buildtest_ssl2 test/buildtest_stack test/buildtest_symhacks test/buildtest_tls1 test/buildtest_ts test/buildtest_txt_db test/buildtest_ui test/buildtest_whrlpool test/buildtest_x509 test/buildtest_x509_vfy test/buildtest_x509v3 test/casttest test/cipherlist_test test/clienthellotest test/constant_time_test test/crltest test/ct_test test/d2i_test test/danetest test/destest test/dhtest test/dsatest test/dtlstest test/dtlsv1listentest test/ecdhtest test/ecdsatest test/ectest test/enginetest test/evp_extra_test test/evp_test test/exptest test/gmdifftest test/heartbeat_test test/hmactest test/ideatest test/igetest test/md2test test/md4test test/md5test test/mdc2test test/memleaktest test/p5_crpt2_test test/packettest test/pbelutest test/randtest test/rc2test test/rc4test test/rc5test test/rmdtest test/rsa_test test/sanitytest test/secmemtest test/sha1test test/sha256t test/sha512t test/shlibloadtest test/srptest test/ssl_test test/ssl_test_ctx_test test/sslapitest test/sslcorrupttest test/ssltest_old test/threadstest test/v3ext test/v3nametest test/verify_extra_test test/wp_test test/x509aux
SCRIPTS=apps/CA.pl apps/tsget tools/c_rehash util/shlib_wrap.sh

GENERATED_MANDATORY=crypto/include/internal/bn_conf.h crypto/include/internal/dso_conf.h include/openssl/opensslconf.h
GENERATED=test/buildtest_dtls1.c test/buildtest_cmac.c test/buildtest_objects.c test/buildtest_rsa.c test/buildtest_pkcs7.c test/buildtest_dh.c test/buildtest_asn1t.c test/buildtest_evp.c test/buildtest_ts.c test/buildtest_conf_api.c test/buildtest_modes.c test/buildtest_pkcs12.c test/buildtest_ecdh.c test/buildtest_ebcdic.c test/buildtest_kdf.c test/buildtest_ec.c test/buildtest_obj_mac.c test/buildtest_ossl_typ.c test/buildtest_asn1.c test/buildtest_hmac.c test/buildtest_symhacks.c test/buildtest_rand.c test/buildtest_rc4.c test/buildtest_e_os2.c test/buildtest_safestack.c test/buildtest_pem2.c test/buildtest_idea.c test/buildtest_ocsp.c test/buildtest_whrlpool.c test/buildtest_ssl2.c test/buildtest_crypto.c test/buildtest_ui.c test/buildtest_cast.c test/buildtest_ssl.c test/buildtest_engine.c test/buildtest_mdc2.c test/buildtest_blowfish.c test/buildtest_aes.c test/buildtest_x509.c test/buildtest_seed.c test/buildtest_err.c test/buildtest_camellia.c test/buildtest_des.c test/buildtest_ripemd.c test/buildtest_bn.c test/buildtest_async.c test/buildtest_md4.c test/buildtest_comp.c test/buildtest_txt_db.c test/buildtest_rc2.c test/buildtest_ecdsa.c test/buildtest_md5.c test/buildtest_tls1.c test/buildtest_opensslv.c test/buildtest_buffer.c test/buildtest_cms.c test/buildtest_lhash.c test/buildtest_srp.c test/buildtest_sha.c test/buildtest_srtp.c test/buildtest_dsa.c test/buildtest_stack.c test/buildtest_pem.c test/buildtest_x509v3.c test/buildtest_conf.c test/buildtest_bio.c test/buildtest_ct.c test/buildtest_x509_vfy.c include/openssl/opensslconf.h crypto/include/internal/bn_conf.h crypto/include/internal/dso_conf.h crypto/buildinf.h

INSTALL_LIBS=libcrypto.a libssl.a
INSTALL_SHLIBS=libcrypto.so.$(SHLIB_MAJOR).$(SHLIB_MINOR) libssl.so.$(SHLIB_MAJOR).$(SHLIB_MINOR)
INSTALL_SHLIB_INFO="libcrypto.so.$(SHLIB_MAJOR).$(SHLIB_MINOR);libcrypto.so" "libssl.so.$(SHLIB_MAJOR).$(SHLIB_MINOR);libssl.so"
INSTALL_ENGINES=engines/capi.so engines/padlock.so
INSTALL_PROGRAMS=apps/openssl

BIN_SCRIPTS=$(BLDDIR)/tools/c_rehash
MISC_SCRIPTS=$(BLDDIR)/apps/CA.pl $(BLDDIR)/apps/tsget


# DESTDIR is for package builders so that they can configure for, say,
# /usr/ and yet have everything installed to /tmp/somedir/usr/.
# Normally it is left empty.
DESTDIR=

# Do not edit these manually. Use Configure with --prefix or --openssldir
# to change this!  Short explanation in the top comment in Configure
INSTALLTOP=/home/shenshaohui/openssl-install/arm
OPENSSLDIR=/home/shenshaohui/openssl-install/arm/ssl
LIBDIR=lib
ENGINESDIR=/home/shenshaohui/openssl-install/arm/lib/engines-1.1

# Convenience variable for those who want to set the rpath in shared
# libraries and applications
LIBRPATH=$(INSTALLTOP)/$(LIBDIR)

MANDIR=$(INSTALLTOP)/share/man
DOCDIR=$(INSTALLTOP)/share/doc/$(BASENAME)
HTMLDIR=$(DOCDIR)/html

# MANSUFFIX is for the benefit of anyone who may want to have a suffix
# appended after the manpage file section number.  "ssl" is popular,
# resulting in files such as config.5ssl rather than config.5.
MANSUFFIX=
HTMLSUFFIX=html



CROSS_COMPILE= /opt/ndk/android-ndk-r13b/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-
CC= $(CROSS_COMPILE)gcc
CFLAGS=-DDSO_DLFCN -DHAVE_DLFCN_H -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSLDIR="\"$(OPENSSLDIR)\"" -DENGINESDIR="\"$(ENGINESDIR)\"" -Wall -O3 -pthread -mandroid -fPIC --sysroot=$(CROSS_SYSROOT) -Wa,--noexecstack 
CFLAGS_Q=-DDSO_DLFCN -DHAVE_DLFCN_H -DNDEBUG -DOPENSSL_THREADS -DOPENSSL_NO_STATIC_ENGINE -DOPENSSL_PIC -DOPENSSLDIR=\"\\\"$(OPENSSLDIR)\\\"\" -DENGINESDIR=\"\\\"$(ENGINESDIR)\\\"\" 
LDFLAGS= 
PLIB_LDFLAGS= 
EX_LIBS= -ldl 
LIB_CFLAGS=-fPIC -DOPENSSL_USE_NODELETE
LIB_LDFLAGS=-Wl,-znodelete 
DSO_CFLAGS=-fPIC -DOPENSSL_USE_NODELETE
DSO_LDFLAGS=$(LIB_LDFLAGS)
BIN_CFLAGS=-pie

PERL=/usr/bin/perl

ARFLAGS= 
AR=$(CROSS_COMPILE)ar $(ARFLAGS) r
RANLIB= $(CROSS_COMPILE)ranlib
NM= $(CROSS_COMPILE)nm
RCFLAGS=
RC= $(CROSS_COMPILE)windres
RM= rm -f
RMDIR= rmdir
TAR= tar
TARFLAGS= 
MAKEDEPEND=

BASENAME=       openssl
NAME=           $(BASENAME)-$(VERSION)
TARFILE=        ../$(NAME).tar

# We let the C compiler driver to take care of .s files. This is done in
# order to be excused from maintaining a separate set of architecture
# dependent assembler flags. E.g. if you throw -mcpu=ultrasparc at SPARC
# gcc, then the driver will automatically translate it to -xarch=v8plus
# and pass it down to assembler.
AS=$(CC) -c
ASFLAG=$(CFLAGS)
PERLASM_SCHEME= 

# For x86 assembler: Set PROCESSOR to 386 if you want to support
# the 80386.
PROCESSOR= 

# We want error [and other] messages in English. Trouble is that make(1)
# doesn't pass macros down as environment variables unless there already
# was corresponding variable originally set. In other words we can only
# reassign environment variables, but not set new ones, not in portable
# manner that is. That's why we reassign several, just to be sure...
LC_ALL=C
LC_MESSAGES=C
LANG=C

# The main targets ###################################################

all: build_generated
	$(MAKE) depend && $(MAKE) _all
_all: build_libs_nodep build_engines_nodep build_programs_nodep link-utils
build_libs: build_generated
	$(MAKE) depend && $(MAKE) _build_libs
_build_libs: build_libs_nodep
build_engines: build_generated
	$(MAKE) depend && $(MAKE) _build_engines
_build_engines: build_engines_nodep
build_programs: build_generated
	$(MAKE) depend && $(MAKE) _build_programs
_build_programs: build_programs_nodep

build_generated: $(GENERATED_MANDATORY)
build_libs_nodep: libcrypto.pc libssl.pc openssl.pc
build_engines_nodep: $(ENGINES)
build_programs_nodep: $(PROGRAMS) $(SCRIPTS)

# Kept around for backward compatibility
build_apps build_tests: build_programs

test: tests
tests: build_generated
	$(MAKE) depend && $(MAKE) _tests
_tests: build_programs_nodep build_engines_nodep link-utils
	@ : 
	( cd test; \
	  SRCTOP=../$(SRCDIR) \
	  BLDTOP=../$(BLDDIR) \
	  PERL="$(PERL)" \
	  EXE_EXT= \
	  OPENSSL_ENGINES=../$(BLDDIR)/engines \
	  OPENSSL_DEBUG_MEMORY=on \
	    $(PERL) ../$(SRCDIR)/test/run_tests.pl $(TESTS) )
	@ : 

list-tests:
	@ : 
	@SRCTOP="$(SRCDIR)" \
	 $(PERL) $(SRCDIR)/test/run_tests.pl list
	@ : 

install: install_sw install_ssldirs install_docs

uninstall: uninstall_docs uninstall_sw

libclean:
	@set -e; for s in $(SHLIB_INFO); do \
		s1=`echo "$$s" | cut -f1 -d";"`; \
		s2=`echo "$$s" | cut -f2 -d";"`; \
		echo $(RM) $$s1; \
		$(RM) $$s1; \
		if [ "$$s1" != "$$s2" ]; then \
			echo $(RM) $$s2; \
			$(RM) $$s2; \
		fi; \
	done
	$(RM) $(LIBS)
	$(RM) *.map

clean: libclean
	$(RM) $(PROGRAMS) $(TESTPROGS) $(ENGINES) $(SCRIPTS)
	$(RM) $(GENERATED)
	-$(RM) `find . -name '*.d' -a \! -path "./.git/*"`
	-$(RM) `find . -name '*.o' -a \! -path "./.git/*"`
	$(RM) core
	$(RM) tags TAGS
	$(RM) openssl.pc libcrypto.pc libssl.pc
	-$(RM) `find . -type l -a \! -path "./.git/*"`
	$(RM) $(TARFILE)

distclean: clean
	$(RM) configdata.pm
	$(RM) Makefile

# We check if any depfile is newer than Makefile and decide to
# concatenate only if that is true.
depend:
	@: 

# Install helper targets #############################################

install_sw: all install_dev install_engines install_runtime

uninstall_sw: uninstall_runtime uninstall_engines uninstall_dev

install_docs: install_man_docs install_html_docs

uninstall_docs: uninstall_man_docs uninstall_html_docs
	$(RM) -r -v $(DESTDIR)$(DOCDIR)

install_ssldirs:
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(OPENSSLDIR)/certs
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(OPENSSLDIR)/private
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(OPENSSLDIR)/misc
	@set -e; for x in dummy $(MISC_SCRIPTS); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		echo "install $$x -> $(DESTDIR)$(OPENSSLDIR)/misc/$$fn"; \
		cp $$x $(DESTDIR)$(OPENSSLDIR)/misc/$$fn.new; \
		chmod 755 $(DESTDIR)$(OPENSSLDIR)/misc/$$fn.new; \
		mv -f $(DESTDIR)$(OPENSSLDIR)/misc/$$fn.new \
		      $(DESTDIR)$(OPENSSLDIR)/misc/$$fn; \
	done
	@echo "install $(SRCDIR)/apps/openssl.cnf -> $(DESTDIR)$(OPENSSLDIR)/openssl.cnf.dist"
	@cp $(SRCDIR)/apps/openssl.cnf $(DESTDIR)$(OPENSSLDIR)/openssl.cnf.new
	@chmod 644 $(DESTDIR)$(OPENSSLDIR)/openssl.cnf.new
	@mv -f  $(DESTDIR)$(OPENSSLDIR)/openssl.cnf.new $(DESTDIR)$(OPENSSLDIR)/openssl.cnf.dist
	@if ! [ -f "$(DESTDIR)$(OPENSSLDIR)/openssl.cnf" ]; then \
		echo "install $(SRCDIR)/apps/openssl.cnf -> $(DESTDIR)$(OPENSSLDIR)/openssl.cnf"; \
		cp $(SRCDIR)/apps/openssl.cnf $(DESTDIR)$(OPENSSLDIR)/openssl.cnf; \
		chmod 644 $(DESTDIR)$(OPENSSLDIR)/openssl.cnf; \
	fi

install_dev:
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@echo "*** Installing development files"
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(INSTALLTOP)/include/openssl
	@ : 
	@set -e; for i in $(SRCDIR)/include/openssl/*.h \
			  $(BLDDIR)/include/openssl/*.h; do \
		fn=`basename $$i`; \
		echo "install $$i -> $(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn"; \
		cp $$i $(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn; \
		chmod 644 $(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn; \
	done
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)
	@set -e; for l in $(INSTALL_LIBS); do \
		fn=`basename $$l`; \
		echo "install $$l -> $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn"; \
		cp $$l $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn.new; \
		$(RANLIB) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn.new; \
		chmod 644 $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn.new; \
		mv -f $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn.new \
		      $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn; \
	done
	@ : 
	@set -e; for s in $(INSTALL_SHLIB_INFO); do \
		s1=`echo "$$s" | cut -f1 -d";"`; \
		s2=`echo "$$s" | cut -f2 -d";"`; \
		fn1=`basename $$s1`; \
		fn2=`basename $$s2`; \
		: ; \
		echo "install $$s1 -> $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn1"; \
		cp $$s1 $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn1.new; \
		chmod 755 $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn1.new; \
		mv -f $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn1.new \
		      $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn1; \
		if [ "$$fn1" != "$$fn2" ]; then \
			echo "link $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn2 -> $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn1"; \
			ln -sf $$fn1 $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn2; \
		fi; \
		: ; \
	done
	@ : 
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig
	@echo "install libcrypto.pc -> $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/libcrypto.pc"
	@cp libcrypto.pc $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig
	@chmod 644 $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/libcrypto.pc
	@echo "install libssl.pc -> $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/libssl.pc"
	@cp libssl.pc $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig
	@chmod 644 $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/libssl.pc
	@echo "install openssl.pc -> $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/openssl.pc"
	@cp openssl.pc $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig
	@chmod 644 $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/openssl.pc

uninstall_dev:
	@echo "*** Uninstalling development files"
	@ : 
	@set -e; for i in $(SRCDIR)/include/openssl/*.h \
			  $(BLDDIR)/include/openssl/*.h; do \
		fn=`basename $$i`; \
		echo "$(RM) $(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn"; \
		$(RM) $(DESTDIR)$(INSTALLTOP)/include/openssl/$$fn; \
	done
	-$(RMDIR) $(DESTDIR)$(INSTALLTOP)/include/openssl
	-$(RMDIR) $(DESTDIR)$(INSTALLTOP)/include
	@set -e; for l in $(INSTALL_LIBS); do \
		fn=`basename $$l`; \
		echo "$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn"; \
		$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn; \
	done
	@ : 
	@set -e; for s in $(INSTALL_SHLIB_INFO); do \
		s1=`echo "$$s" | cut -f1 -d";"`; \
		s2=`echo "$$s" | cut -f2 -d";"`; \
		fn1=`basename $$s1`; \
		fn2=`basename $$s2`; \
		: ; \
		echo "$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn1"; \
		$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn1; \
		if [ "$$fn1" != "$$fn2" ]; then \
			echo "$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn2"; \
			$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn2; \
		fi; \
		: ; \
	done
	@ : 
	$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/libcrypto.pc
	$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/libssl.pc
	$(RM) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig/openssl.pc
	-$(RMDIR) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/pkgconfig
	-$(RMDIR) $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)

install_engines:
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(ENGINESDIR)/
	@echo "*** Installing engines"
	@set -e; for e in dummy $(INSTALL_ENGINES); do \
		if [ "$$e" = "dummy" ]; then continue; fi; \
		fn=`basename $$e`; \
		echo "install $$e -> $(DESTDIR)$(ENGINESDIR)/$$fn"; \
		cp $$e $(DESTDIR)$(ENGINESDIR)/$$fn.new; \
		chmod 755 $(DESTDIR)$(ENGINESDIR)/$$fn.new; \
		mv -f $(DESTDIR)$(ENGINESDIR)/$$fn.new \
		      $(DESTDIR)$(ENGINESDIR)/$$fn; \
	done

uninstall_engines:
	@echo "*** Uninstalling engines"
	@set -e; for e in dummy $(INSTALL_ENGINES); do \
		if [ "$$e" = "dummy" ]; then continue; fi; \
		fn=`basename $$e`; \
		if [ "$$fn" = 'ossltest.so' ]; then \
			continue; \
		fi; \
		echo "$(RM) $(DESTDIR)$(ENGINESDIR)/$$fn"; \
		$(RM) $(DESTDIR)$(ENGINESDIR)/$$fn; \
	done
	-$(RMDIR) $(DESTDIR)$(ENGINESDIR)

install_runtime:
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(INSTALLTOP)/bin
	@ : 
	@$(PERL) $(SRCDIR)/util/mkdir-p.pl $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)
	@ : 
	@echo "*** Installing runtime files"
	@set -e; for s in dummy $(INSTALL_SHLIBS); do \
		if [ "$$s" = "dummy" ]; then continue; fi; \
		fn=`basename $$s`; \
		: ; \
		echo "install $$s -> $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn"; \
		cp $$s $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn.new; \
		chmod 755 $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn.new; \
		mv -f $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn.new \
		      $(DESTDIR)$(INSTALLTOP)/$(LIBDIR)/$$fn; \
		: ; \
	done
	@set -e; for x in dummy $(INSTALL_PROGRAMS); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		echo "install $$x -> $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		cp $$x $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new; \
		chmod 755 $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new; \
		mv -f $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new \
		      $(DESTDIR)$(INSTALLTOP)/bin/$$fn; \
	done
	@set -e; for x in dummy $(BIN_SCRIPTS); do \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		echo "install $$x -> $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		cp $$x $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new; \
		chmod 755 $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new; \
		mv -f $(DESTDIR)$(INSTALLTOP)/bin/$$fn.new \
		      $(DESTDIR)$(INSTALLTOP)/bin/$$fn; \
	done

uninstall_runtime:
	@echo "*** Uninstalling runtime files"
	@set -e; for x in dummy $(INSTALL_PROGRAMS); \
	do  \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		echo "$(RM) $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		$(RM) $(DESTDIR)$(INSTALLTOP)/bin/$$fn; \
	done;
	@set -e; for x in dummy $(BIN_SCRIPTS); \
	do  \
		if [ "$$x" = "dummy" ]; then continue; fi; \
		fn=`basename $$x`; \
		echo "$(RM) $(DESTDIR)$(INSTALLTOP)/bin/$$fn"; \
		$(RM) $(DESTDIR)$(INSTALLTOP)/bin/$$fn; \
	done
	@ : 
	-$(RMDIR) $(DESTDIR)$(INSTALLTOP)/bin

# A method to extract all names from a .pod file
# The first sed extracts everything between "=head1 NAME" and the next =head1
# The perl command joins all the lines into one
# The second sed removes the description and turns all commas into spaces
# Voilà, you have a space separated list of names!
EXTRACT_NAMES=sed -e '1,/^=head1  *NAME *$$/d;/^=head1/,$$d' | \
              $(PERL) -p -0 -e 's/\n/ /g; END {print "\n"}' | \
              sed -e 's/ - .*$$//;s/,/ /g'
PROCESS_PODS=\
	set -e; \
	here=`cd $(SRCDIR); pwd`; \
	point=$$here/util/point.sh; \
	for ds in apps:1 crypto:3 ssl:3; do \
	    defdir=`echo $$ds | cut -f1 -d:`; \
	    defsec=`echo $$ds | cut -f2 -d:`; \
	    for p in $(SRCDIR)/doc/$$defdir/*.pod; do \
		SEC=`sed -ne 's/^=for  *comment  *openssl_manual_section: *\([0-9]\) *$$/\1/p' $$p`; \
		[ -z "$$SEC" ] && SEC=$$defsec; \
		fn=`basename $$p .pod`; \
		Name=$$fn; \
		NAME=`echo $$fn | tr '[a-z]' '[A-Z]'`; \
		suf=`eval "echo $$OUTSUFFIX"`; \
		top=`eval "echo $$OUTTOP"`; \
		$(PERL) $(SRCDIR)/util/mkdir-p.pl $$top/man$$SEC; \
		echo "install $$p -> $$top/man$$SEC/$$fn$$suf"; \
		cat $$p | eval "$$GENERATE" \
			>  $$top/man$$SEC/$$fn$$suf; \
		names=`cat $$p | $(EXTRACT_NAMES)`; \
		( cd $$top/man$$SEC; \
		  for n in $$names; do \
		      comp_n="$$n"; \
		      comp_fn="$$fn"; \
		      case "$(PLATFORM)" in DJGPP|Cygwin*|mingw*|darwin*-*-cc) \
			  comp_n=`echo "$$n" | tr '[A-Z]' '[a-z]'`; \
			  comp_fn=`echo "$$fn" | tr '[A-Z]' '[a-z]'`; \
			  ;; \
		      esac; \
		      if [ "$$comp_n" != "$$comp_fn" ]; then \
			  echo "link $$top/man$$SEC/$$n$$suf -> $$top/man$$SEC/$$fn$$suf"; \
			  PLATFORM=$(PLATFORM) $$point $$fn$$suf $$n$$suf; \
		      fi; \
		  done ); \
	    done; \
	done
UNINSTALL_DOCS=\
	set -e; \
	here=`cd $(SRCDIR); pwd`; \
	for ds in apps:1 crypto:3 ssl:3; do \
	    defdir=`echo $$ds | cut -f1 -d:`; \
	    defsec=`echo $$ds | cut -f2 -d:`; \
	    for p in $(SRCDIR)/doc/$$defdir/*.pod; do \
		SEC=`sed -ne 's/^=for  *comment  *openssl_manual_section: *\([0-9]\) *$$/\1/p' $$p`; \
		[ -z "$$SEC" ] && SEC=$$defsec; \
		fn=`basename $$p .pod`; \
		suf=`eval "echo $$OUTSUFFIX"`; \
		top=`eval "echo $$OUTTOP"`; \
		echo "$(RM) $$top/man$$SEC/$$fn$$suf"; \
	        $(RM) $$top/man$$SEC/$$fn$$suf; \
		names=`cat $$p | $(EXTRACT_NAMES)`; \
		for n in $$names; do \
		    comp_n="$$n"; \
		    comp_fn="$$fn"; \
		    case "$(PLATFORM)" in DJGPP|Cygwin*|mingw*|darwin*-*-cc) \
			comp_n=`echo "$$n" | tr '[A-Z]' '[a-z]'`; \
			comp_fn=`echo "$$fn" | tr '[A-Z]' '[a-z]'`; \
			;; \
		    esac; \
		    if [ "$$comp_n" != "$$comp_fn" ]; then \
			echo "$(RM) $$top/man$$SEC/$$n$$suf"; \
			$(RM) $$top/man$$SEC/$$n$$suf; \
		    fi; \
		done; \
		( $(RMDIR) $$top/man$$SEC 2>/dev/null || exit 0 ); \
	    done; \
	done

install_man_docs:
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@echo "*** Installing manpages"
	@\
	OUTSUFFIX='.$${SEC}$(MANSUFFIX)'; \
	OUTTOP="$(DESTDIR)$(MANDIR)"; \
	GENERATE='pod2man --name=$$NAME --section=$$SEC --center=OpenSSL --release=$(VERSION)'; \
	$(PROCESS_PODS)

uninstall_man_docs:
	@echo "*** Uninstalling manpages"
	@\
	OUTSUFFIX='.$${SEC}$(MANSUFFIX)'; \
	OUTTOP="$(DESTDIR)$(MANDIR)"; \
	$(UNINSTALL_DOCS)

install_html_docs:
	@[ -n "$(INSTALLTOP)" ] || (echo INSTALLTOP should not be empty; exit 1)
	@echo "*** Installing HTML manpages"
	@\
	OUTSUFFIX='.$(HTMLSUFFIX)'; \
	OUTTOP="$(DESTDIR)$(HTMLDIR)"; \
	GENERATE="pod2html --podroot=$(SRCDIR)/doc --htmldir=.. \
			   --podpath=apps:crypto:ssl --title=\$$Name \
		  | perl -pe 's|href=\"http://man.he.net/man|href=\"../man|g; s|href=\"(.*/man.*)(?<!\.html)\">|href=\"\$$1.html\">|g;'"; \
	$(PROCESS_PODS)

uninstall_html_docs:
	@echo "*** Uninstalling manpages"
	@\
	OUTSUFFIX='.$(HTMLSUFFIX)'; \
	OUTTOP="$(DESTDIR)$(HTMLDIR)"; \
	$(UNINSTALL_DOCS)


# Developer targets (note: these are only available on Unix) #########

update: generate errors ordinals

generate: generate_apps generate_crypto_bn generate_crypto_objects \
          generate_crypto_conf generate_crypto_asn1

# Test coverage is a good idea for the future
#coverage: $(PROGRAMS) $(TESTPROGRAMS)
#	...

lint:
	lint -DLINT $(INCLUDES) $(SRCS)


generate_apps:
	( cd $(SRCDIR); $(PERL) VMS/VMSify-conf.pl \
				< apps/openssl.cnf > apps/openssl-vms.cnf )
	( b=`pwd`; cd $(SRCDIR); $(PERL) -I$$b apps/progs.pl \
					apps/app_rand.c apps/apps.c apps/asn1pars.c apps/ca.c apps/ciphers.c apps/cms.c apps/crl.c apps/crl2p7.c apps/dgst.c apps/dhparam.c apps/dsa.c apps/dsaparam.c apps/ec.c apps/ecparam.c apps/enc.c apps/engine.c apps/errstr.c apps/gendsa.c apps/genpkey.c apps/genrsa.c apps/nseq.c apps/ocsp.c apps/openssl.c apps/opt.c apps/passwd.c apps/pkcs12.c apps/pkcs7.c apps/pkcs8.c apps/pkey.c apps/pkeyparam.c apps/pkeyutl.c apps/prime.c apps/rand.c apps/rehash.c apps/req.c apps/rsa.c apps/rsautl.c apps/s_cb.c apps/s_client.c apps/s_server.c apps/s_socket.c apps/s_time.c apps/sess_id.c apps/smime.c apps/speed.c apps/spkac.c apps/srp.c apps/ts.c apps/verify.c apps/version.c apps/x509.c \
					> apps/progs.h )

generate_crypto_bn:
	( cd $(SRCDIR); $(PERL) crypto/bn/bn_prime.pl > crypto/bn/bn_prime.h )

generate_crypto_objects:
	( cd $(SRCDIR); $(PERL) crypto/objects/objects.pl \
				crypto/objects/objects.txt \
				crypto/objects/obj_mac.num \
				include/openssl/obj_mac.h )
	( cd $(SRCDIR); $(PERL) crypto/objects/obj_dat.pl \
				include/openssl/obj_mac.h \
				crypto/objects/obj_dat.h )
	( cd $(SRCDIR); $(PERL) crypto/objects/objxref.pl \
				crypto/objects/obj_mac.num \
				crypto/objects/obj_xref.txt \
				> crypto/objects/obj_xref.h )

generate_crypto_conf:
	( cd $(SRCDIR); $(PERL) crypto/conf/keysets.pl \
			        > crypto/conf/conf_def.h )

generate_crypto_asn1:
	( cd $(SRCDIR); $(PERL) crypto/asn1/charmap.pl \
			        > crypto/asn1/charmap.h )

errors:
	( cd $(SRCDIR); $(PERL) util/ck_errf.pl -strict */*.c */*/*.c )
	( cd $(SRCDIR); $(PERL) util/mkerr.pl -recurse -write )
	( cd $(SRCDIR)/engines; \
	  for e in *.ec; do \
	      $(PERL) ../util/mkerr.pl -conf $$e \
		      -nostatic -staticloader -write *.c; \
	  done )

ordinals:
	( b=`pwd`; cd $(SRCDIR); $(PERL) -I$$b util/mkdef.pl crypto update )
	( b=`pwd`; cd $(SRCDIR); $(PERL) -I$$b util/mkdef.pl ssl update )

test_ordinals:
	( cd test; \
	  SRCTOP=../$(SRCDIR) \
	  BLDTOP=../$(BLDDIR) \
	    $(PERL) ../$(SRCDIR)/test/run_tests.pl test_ordinals )

tags TAGS: FORCE
	rm -f TAGS tags
	-ctags -R .
	-etags `find . -name '*.[ch]' -o -name '*.pm'`

# Release targets (note: only available on Unix) #####################

TAR_COMMAND=$(TAR) $(TARFLAGS) --owner 0 --group 0 -cvf -
PREPARE_CMD=:
tar:
	TMPDIR=/var/tmp/openssl-copy.$$$$; \
	DISTDIR=$(NAME); \
	mkdir -p $$TMPDIR/$$DISTDIR; \
	(cd $(SRCDIR); \
	 git ls-tree -r --name-only --full-tree HEAD \
         | grep -v '^fuzz/corpora' \
	 | while read F; do \
	       mkdir -p $$TMPDIR/$$DISTDIR/`dirname $$F`; \
	       cp $$F $$TMPDIR/$$DISTDIR/$$F; \
	   done); \
	(cd $$TMPDIR; \
	 $(PREPARE_CMD); \
	 find $$TMPDIR/$$DISTDIR -type d -print | xargs chmod 755; \
	 find $$TMPDIR/$$DISTDIR -type f -print | xargs chmod a+r; \
	 find $$TMPDIR/$$DISTDIR -type f -perm -0100 -print | xargs chmod a+x; \
	 $(TAR_COMMAND) $$DISTDIR) \
	| (cd $(SRCDIR); gzip --best > $(TARFILE).gz); \
	rm -rf $$TMPDIR
	cd $(SRCDIR); ls -l $(TARFILE).gz

dist:
	@$(MAKE) PREPARE_CMD='$(PERL) ./Configure dist' tar

# Helper targets #####################################################

link-utils: $(BLDDIR)/util/opensslwrap.sh

$(BLDDIR)/util/opensslwrap.sh: configdata.pm
	@if [ "$(SRCDIR)" != "$(BLDDIR)" ]; then \
	    mkdir -p "$(BLDDIR)/util"; \
	    ln -sf "../$(SRCDIR)/util/opensslwrap.sh" "$(BLDDIR)/util"; \
	fi

FORCE:

# Building targets ###################################################

libcrypto.pc libssl.pc openssl.pc: configdata.pm $(LIBS) libcrypto.so libssl.so
libcrypto.pc:
	@ ( echo 'prefix=$(INSTALLTOP)'; \
	    echo 'exec_prefix=$${prefix}'; \
	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
	    echo 'includedir=$${prefix}/include'; \
	    echo 'enginesdir=$${libdir}/engines-1.1'; \
	    echo ''; \
	    echo 'Name: OpenSSL-libcrypto'; \
	    echo 'Description: OpenSSL cryptography library'; \
	    echo 'Version: '$(VERSION); \
	    echo 'Libs: -L$${libdir} -lcrypto'; \
	    echo 'Libs.private: $(EX_LIBS)'; \
	    echo 'Cflags: -I$${includedir}' ) > libcrypto.pc

libssl.pc:
	@ ( echo 'prefix=$(INSTALLTOP)'; \
	    echo 'exec_prefix=$${prefix}'; \
	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
	    echo 'includedir=$${prefix}/include'; \
	    echo ''; \
	    echo 'Name: OpenSSL-libssl'; \
	    echo 'Description: Secure Sockets Layer and cryptography libraries'; \
	    echo 'Version: '$(VERSION); \
	    echo 'Requires.private: libcrypto'; \
	    echo 'Libs: -L$${libdir} -lssl'; \
	    echo 'Libs.private: $(EX_LIBS)'; \
	    echo 'Cflags: -I$${includedir}' ) > libssl.pc

openssl.pc:
	@ ( echo 'prefix=$(INSTALLTOP)'; \
	    echo 'exec_prefix=$${prefix}'; \
	    echo 'libdir=$${exec_prefix}/$(LIBDIR)'; \
	    echo 'includedir=$${prefix}/include'; \
	    echo ''; \
	    echo 'Name: OpenSSL'; \
	    echo 'Description: Secure Sockets Layer and cryptography libraries and tools'; \
	    echo 'Version: '$(VERSION); \
	    echo 'Requires: libssl libcrypto' ) > openssl.pc

configdata.pm: $(SRCDIR)/Configure $(SRCDIR)/config Configurations/unix-Makefile.tmpl Configurations/common.tmpl ./build.info crypto/build.info ssl/build.info engines/build.info apps/build.info test/build.info util/build.info tools/build.info fuzz/build.info crypto/objects/build.info crypto/md4/build.info crypto/md5/build.info crypto/sha/build.info crypto/mdc2/build.info crypto/hmac/build.info crypto/ripemd/build.info crypto/whrlpool/build.info crypto/poly1305/build.info crypto/blake2/build.info crypto/des/build.info crypto/aes/build.info crypto/rc2/build.info crypto/rc4/build.info crypto/idea/build.info crypto/bf/build.info crypto/cast/build.info crypto/camellia/build.info crypto/seed/build.info crypto/chacha/build.info crypto/modes/build.info crypto/bn/build.info crypto/ec/build.info crypto/rsa/build.info crypto/dsa/build.info crypto/dh/build.info crypto/dso/build.info crypto/engine/build.info crypto/buffer/build.info crypto/bio/build.info crypto/stack/build.info crypto/lhash/build.info crypto/rand/build.info crypto/err/build.info crypto/evp/build.info crypto/asn1/build.info crypto/pem/build.info crypto/x509/build.info crypto/x509v3/build.info crypto/conf/build.info crypto/txt_db/build.info crypto/pkcs7/build.info crypto/pkcs12/build.info crypto/comp/build.info crypto/ocsp/build.info crypto/ui/build.info crypto/cms/build.info crypto/ts/build.info crypto/srp/build.info crypto/cmac/build.info crypto/ct/build.info crypto/async/build.info crypto/kdf/build.info Configurations/00-base-templates.conf Configurations/10-main.conf
	@echo "Detected changed: $?"
	@echo "Reconfiguring..."
	$(PERL) $(SRCDIR)/Configure reconf
	@echo "**************************************************"
	@echo "***                                            ***"
	@echo "***   Please run the same make command again   ***"
	@echo "***                                            ***"
	@echo "**************************************************"
	@false


crypto/include/internal/bn_conf.h: crypto/include/internal/bn_conf.h.in configdata.pm
	$(PERL) "-I$(BLDDIR)" -Mconfigdata "util/dofile.pl" \
	    "-oMakefile" crypto/include/internal/bn_conf.h.in > $@
crypto/include/internal/dso_conf.h: crypto/include/internal/dso_conf.h.in configdata.pm
	$(PERL) "-I$(BLDDIR)" -Mconfigdata "util/dofile.pl" \
	    "-oMakefile" crypto/include/internal/dso_conf.h.in > $@
include/openssl/opensslconf.h: include/openssl/opensslconf.h.in configdata.pm
	$(PERL) "-I$(BLDDIR)" -Mconfigdata "util/dofile.pl" \
	    "-oMakefile" include/openssl/opensslconf.h.in > $@
# With a build on a Windows POSIX layer (Cygwin or Mingw), we know for a fact
# that two files get produced, {shlibname}.dll and {libname}.dll.a.
# With all other Unix platforms, we often build a shared library with the
# SO version built into the file name and a symlink without the SO version
# It's not necessary to have both as targets.  The choice falls on the
# simplest, {libname} for Windows POSIX layers and
# {libname}.so for the Unix platforms.
libcrypto.so: libcrypto.a  util/libcrypto.num
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PLATFORM=$(PLATFORM) \
		PERL="$(PERL)" SRCDIR='$(SRCDIR)' DSTDIR="." \
		INSTALLTOP='$(INSTALLTOP)' LIBDIR='$(LIBDIR)' \
		LIBDEPS='$(PLIB_LDFLAGS) '""' $(EX_LIBS)' \
		LIBNAME=crypto LIBVERSION=$(SHLIB_MAJOR).$(SHLIB_MINOR) \
		LIBCOMPATVERSIONS=';$(SHLIB_VERSION_HISTORY)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(LIB_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		SHARED_LDFLAGS='$(LIB_LDFLAGS)' SHLIB_EXT=.so.$(SHLIB_MAJOR).$(SHLIB_MINOR) \
		RC='$(RC)' SHARED_RCFLAGS='$(RCFLAGS)' \
		link_shlib.linux-shared
libcrypto.a: crypto/aes/aes_cbc.o crypto/aes/aes_cfb.o crypto/aes/aes_core.o crypto/aes/aes_ecb.o crypto/aes/aes_ige.o crypto/aes/aes_misc.o crypto/aes/aes_ofb.o crypto/aes/aes_wrap.o crypto/asn1/a_bitstr.o crypto/asn1/a_d2i_fp.o crypto/asn1/a_digest.o crypto/asn1/a_dup.o crypto/asn1/a_gentm.o crypto/asn1/a_i2d_fp.o crypto/asn1/a_int.o crypto/asn1/a_mbstr.o crypto/asn1/a_object.o crypto/asn1/a_octet.o crypto/asn1/a_print.o crypto/asn1/a_sign.o crypto/asn1/a_strex.o crypto/asn1/a_strnid.o crypto/asn1/a_time.o crypto/asn1/a_type.o crypto/asn1/a_utctm.o crypto/asn1/a_utf8.o crypto/asn1/a_verify.o crypto/asn1/ameth_lib.o crypto/asn1/asn1_err.o crypto/asn1/asn1_gen.o crypto/asn1/asn1_lib.o crypto/asn1/asn1_par.o crypto/asn1/asn_mime.o crypto/asn1/asn_moid.o crypto/asn1/asn_mstbl.o crypto/asn1/asn_pack.o crypto/asn1/bio_asn1.o crypto/asn1/bio_ndef.o crypto/asn1/d2i_pr.o crypto/asn1/d2i_pu.o crypto/asn1/evp_asn1.o crypto/asn1/f_int.o crypto/asn1/f_string.o crypto/asn1/i2d_pr.o crypto/asn1/i2d_pu.o crypto/asn1/n_pkey.o crypto/asn1/nsseq.o crypto/asn1/p5_pbe.o crypto/asn1/p5_pbev2.o crypto/asn1/p5_scrypt.o crypto/asn1/p8_pkey.o crypto/asn1/t_bitst.o crypto/asn1/t_pkey.o crypto/asn1/t_spki.o crypto/asn1/tasn_dec.o crypto/asn1/tasn_enc.o crypto/asn1/tasn_fre.o crypto/asn1/tasn_new.o crypto/asn1/tasn_prn.o crypto/asn1/tasn_scn.o crypto/asn1/tasn_typ.o crypto/asn1/tasn_utl.o crypto/asn1/x_algor.o crypto/asn1/x_bignum.o crypto/asn1/x_info.o crypto/asn1/x_long.o crypto/asn1/x_pkey.o crypto/asn1/x_sig.o crypto/asn1/x_spki.o crypto/asn1/x_val.o crypto/async/arch/async_null.o crypto/async/arch/async_posix.o crypto/async/arch/async_win.o crypto/async/async.o crypto/async/async_err.o crypto/async/async_wait.o crypto/bf/bf_cfb64.o crypto/bf/bf_ecb.o crypto/bf/bf_enc.o crypto/bf/bf_ofb64.o crypto/bf/bf_skey.o crypto/bio/b_addr.o crypto/bio/b_dump.o crypto/bio/b_print.o crypto/bio/b_sock.o crypto/bio/b_sock2.o crypto/bio/bf_buff.o crypto/bio/bf_lbuf.o crypto/bio/bf_nbio.o crypto/bio/bf_null.o crypto/bio/bio_cb.o crypto/bio/bio_err.o crypto/bio/bio_lib.o crypto/bio/bio_meth.o crypto/bio/bss_acpt.o crypto/bio/bss_bio.o crypto/bio/bss_conn.o crypto/bio/bss_dgram.o crypto/bio/bss_fd.o crypto/bio/bss_file.o crypto/bio/bss_log.o crypto/bio/bss_mem.o crypto/bio/bss_null.o crypto/bio/bss_sock.o crypto/blake2/blake2b.o crypto/blake2/blake2s.o crypto/blake2/m_blake2b.o crypto/blake2/m_blake2s.o crypto/bn/bn_add.o crypto/bn/bn_asm.o crypto/bn/bn_blind.o crypto/bn/bn_const.o crypto/bn/bn_ctx.o crypto/bn/bn_depr.o crypto/bn/bn_dh.o crypto/bn/bn_div.o crypto/bn/bn_err.o crypto/bn/bn_exp.o crypto/bn/bn_exp2.o crypto/bn/bn_gcd.o crypto/bn/bn_gf2m.o crypto/bn/bn_intern.o crypto/bn/bn_kron.o crypto/bn/bn_lib.o crypto/bn/bn_mod.o crypto/bn/bn_mont.o crypto/bn/bn_mpi.o crypto/bn/bn_mul.o crypto/bn/bn_nist.o crypto/bn/bn_prime.o crypto/bn/bn_print.o crypto/bn/bn_rand.o crypto/bn/bn_recp.o crypto/bn/bn_shift.o crypto/bn/bn_sqr.o crypto/bn/bn_sqrt.o crypto/bn/bn_srp.o crypto/bn/bn_word.o crypto/bn/bn_x931p.o crypto/buffer/buf_err.o crypto/buffer/buffer.o crypto/camellia/camellia.o crypto/camellia/cmll_cbc.o crypto/camellia/cmll_cfb.o crypto/camellia/cmll_ctr.o crypto/camellia/cmll_ecb.o crypto/camellia/cmll_misc.o crypto/camellia/cmll_ofb.o crypto/cast/c_cfb64.o crypto/cast/c_ecb.o crypto/cast/c_enc.o crypto/cast/c_ofb64.o crypto/cast/c_skey.o crypto/chacha/chacha_enc.o crypto/cmac/cm_ameth.o crypto/cmac/cm_pmeth.o crypto/cmac/cmac.o crypto/cms/cms_asn1.o crypto/cms/cms_att.o crypto/cms/cms_cd.o crypto/cms/cms_dd.o crypto/cms/cms_enc.o crypto/cms/cms_env.o crypto/cms/cms_err.o crypto/cms/cms_ess.o crypto/cms/cms_io.o crypto/cms/cms_kari.o crypto/cms/cms_lib.o crypto/cms/cms_pwri.o crypto/cms/cms_sd.o crypto/cms/cms_smime.o crypto/comp/c_zlib.o crypto/comp/comp_err.o crypto/comp/comp_lib.o crypto/conf/conf_api.o crypto/conf/conf_def.o crypto/conf/conf_err.o crypto/conf/conf_lib.o crypto/conf/conf_mall.o crypto/conf/conf_mod.o crypto/conf/conf_sap.o crypto/cpt_err.o crypto/cryptlib.o crypto/ct/ct_b64.o crypto/ct/ct_err.o crypto/ct/ct_log.o crypto/ct/ct_oct.o crypto/ct/ct_policy.o crypto/ct/ct_prn.o crypto/ct/ct_sct.o crypto/ct/ct_sct_ctx.o crypto/ct/ct_vfy.o crypto/ct/ct_x509v3.o crypto/cversion.o crypto/des/cbc_cksm.o crypto/des/cbc_enc.o crypto/des/cfb64ede.o crypto/des/cfb64enc.o crypto/des/cfb_enc.o crypto/des/des_enc.o crypto/des/ecb3_enc.o crypto/des/ecb_enc.o crypto/des/fcrypt.o crypto/des/fcrypt_b.o crypto/des/ofb64ede.o crypto/des/ofb64enc.o crypto/des/ofb_enc.o crypto/des/pcbc_enc.o crypto/des/qud_cksm.o crypto/des/rand_key.o crypto/des/rpc_enc.o crypto/des/set_key.o crypto/des/str2key.o crypto/des/xcbc_enc.o crypto/dh/dh_ameth.o crypto/dh/dh_asn1.o crypto/dh/dh_check.o crypto/dh/dh_depr.o crypto/dh/dh_err.o crypto/dh/dh_gen.o crypto/dh/dh_kdf.o crypto/dh/dh_key.o crypto/dh/dh_lib.o crypto/dh/dh_meth.o crypto/dh/dh_pmeth.o crypto/dh/dh_prn.o crypto/dh/dh_rfc5114.o crypto/dsa/dsa_ameth.o crypto/dsa/dsa_asn1.o crypto/dsa/dsa_depr.o crypto/dsa/dsa_err.o crypto/dsa/dsa_gen.o crypto/dsa/dsa_key.o crypto/dsa/dsa_lib.o crypto/dsa/dsa_meth.o crypto/dsa/dsa_ossl.o crypto/dsa/dsa_pmeth.o crypto/dsa/dsa_prn.o crypto/dsa/dsa_sign.o crypto/dsa/dsa_vrf.o crypto/dso/dso_dl.o crypto/dso/dso_dlfcn.o crypto/dso/dso_err.o crypto/dso/dso_lib.o crypto/dso/dso_openssl.o crypto/dso/dso_vms.o crypto/dso/dso_win32.o crypto/ebcdic.o crypto/ec/curve25519.o crypto/ec/ec2_mult.o crypto/ec/ec2_oct.o crypto/ec/ec2_smpl.o crypto/ec/ec_ameth.o crypto/ec/ec_asn1.o crypto/ec/ec_check.o crypto/ec/ec_curve.o crypto/ec/ec_cvt.o crypto/ec/ec_err.o crypto/ec/ec_key.o crypto/ec/ec_kmeth.o crypto/ec/ec_lib.o crypto/ec/ec_mult.o crypto/ec/ec_oct.o crypto/ec/ec_pmeth.o crypto/ec/ec_print.o crypto/ec/ecdh_kdf.o crypto/ec/ecdh_ossl.o crypto/ec/ecdsa_ossl.o crypto/ec/ecdsa_sign.o crypto/ec/ecdsa_vrf.o crypto/ec/eck_prn.o crypto/ec/ecp_mont.o crypto/ec/ecp_nist.o crypto/ec/ecp_nistp224.o crypto/ec/ecp_nistp256.o crypto/ec/ecp_nistp521.o crypto/ec/ecp_nistputil.o crypto/ec/ecp_oct.o crypto/ec/ecp_smpl.o crypto/ec/ecx_meth.o crypto/engine/eng_all.o crypto/engine/eng_cnf.o crypto/engine/eng_cryptodev.o crypto/engine/eng_ctrl.o crypto/engine/eng_dyn.o crypto/engine/eng_err.o crypto/engine/eng_fat.o crypto/engine/eng_init.o crypto/engine/eng_lib.o crypto/engine/eng_list.o crypto/engine/eng_openssl.o crypto/engine/eng_pkey.o crypto/engine/eng_rdrand.o crypto/engine/eng_table.o crypto/engine/tb_asnmth.o crypto/engine/tb_cipher.o crypto/engine/tb_dh.o crypto/engine/tb_digest.o crypto/engine/tb_dsa.o crypto/engine/tb_eckey.o crypto/engine/tb_pkmeth.o crypto/engine/tb_rand.o crypto/engine/tb_rsa.o crypto/err/err.o crypto/err/err_all.o crypto/err/err_prn.o crypto/evp/bio_b64.o crypto/evp/bio_enc.o crypto/evp/bio_md.o crypto/evp/bio_ok.o crypto/evp/c_allc.o crypto/evp/c_alld.o crypto/evp/cmeth_lib.o crypto/evp/digest.o crypto/evp/e_aes.o crypto/evp/e_aes_cbc_hmac_sha1.o crypto/evp/e_aes_cbc_hmac_sha256.o crypto/evp/e_bf.o crypto/evp/e_camellia.o crypto/evp/e_cast.o crypto/evp/e_chacha20_poly1305.o crypto/evp/e_des.o crypto/evp/e_des3.o crypto/evp/e_idea.o crypto/evp/e_null.o crypto/evp/e_old.o crypto/evp/e_rc2.o crypto/evp/e_rc4.o crypto/evp/e_rc4_hmac_md5.o crypto/evp/e_rc5.o crypto/evp/e_seed.o crypto/evp/e_xcbc_d.o crypto/evp/encode.o crypto/evp/evp_cnf.o crypto/evp/evp_enc.o crypto/evp/evp_err.o crypto/evp/evp_key.o crypto/evp/evp_lib.o crypto/evp/evp_pbe.o crypto/evp/evp_pkey.o crypto/evp/m_md2.o crypto/evp/m_md4.o crypto/evp/m_md5.o crypto/evp/m_md5_sha1.o crypto/evp/m_mdc2.o crypto/evp/m_null.o crypto/evp/m_ripemd.o crypto/evp/m_sha1.o crypto/evp/m_sigver.o crypto/evp/m_wp.o crypto/evp/names.o crypto/evp/p5_crpt.o crypto/evp/p5_crpt2.o crypto/evp/p_dec.o crypto/evp/p_enc.o crypto/evp/p_lib.o crypto/evp/p_open.o crypto/evp/p_seal.o crypto/evp/p_sign.o crypto/evp/p_verify.o crypto/evp/pmeth_fn.o crypto/evp/pmeth_gn.o crypto/evp/pmeth_lib.o crypto/evp/scrypt.o crypto/ex_data.o crypto/hmac/hm_ameth.o crypto/hmac/hm_pmeth.o crypto/hmac/hmac.o crypto/idea/i_cbc.o crypto/idea/i_cfb64.o crypto/idea/i_ecb.o crypto/idea/i_ofb64.o crypto/idea/i_skey.o crypto/init.o crypto/kdf/hkdf.o crypto/kdf/kdf_err.o crypto/kdf/tls1_prf.o crypto/lhash/lh_stats.o crypto/lhash/lhash.o crypto/md4/md4_dgst.o crypto/md4/md4_one.o crypto/md5/md5_dgst.o crypto/md5/md5_one.o crypto/mdc2/mdc2_one.o crypto/mdc2/mdc2dgst.o crypto/mem.o crypto/mem_clr.o crypto/mem_dbg.o crypto/mem_sec.o crypto/modes/cbc128.o crypto/modes/ccm128.o crypto/modes/cfb128.o crypto/modes/ctr128.o crypto/modes/cts128.o crypto/modes/gcm128.o crypto/modes/ocb128.o crypto/modes/ofb128.o crypto/modes/wrap128.o crypto/modes/xts128.o crypto/o_dir.o crypto/o_fips.o crypto/o_fopen.o crypto/o_init.o crypto/o_str.o crypto/o_time.o crypto/objects/o_names.o crypto/objects/obj_dat.o crypto/objects/obj_err.o crypto/objects/obj_lib.o crypto/objects/obj_xref.o crypto/ocsp/ocsp_asn.o crypto/ocsp/ocsp_cl.o crypto/ocsp/ocsp_err.o crypto/ocsp/ocsp_ext.o crypto/ocsp/ocsp_ht.o crypto/ocsp/ocsp_lib.o crypto/ocsp/ocsp_prn.o crypto/ocsp/ocsp_srv.o crypto/ocsp/ocsp_vfy.o crypto/ocsp/v3_ocsp.o crypto/pem/pem_all.o crypto/pem/pem_err.o crypto/pem/pem_info.o crypto/pem/pem_lib.o crypto/pem/pem_oth.o crypto/pem/pem_pk8.o crypto/pem/pem_pkey.o crypto/pem/pem_sign.o crypto/pem/pem_x509.o crypto/pem/pem_xaux.o crypto/pem/pvkfmt.o crypto/pkcs12/p12_add.o crypto/pkcs12/p12_asn.o crypto/pkcs12/p12_attr.o crypto/pkcs12/p12_crpt.o crypto/pkcs12/p12_crt.o crypto/pkcs12/p12_decr.o crypto/pkcs12/p12_init.o crypto/pkcs12/p12_key.o crypto/pkcs12/p12_kiss.o crypto/pkcs12/p12_mutl.o crypto/pkcs12/p12_npas.o crypto/pkcs12/p12_p8d.o crypto/pkcs12/p12_p8e.o crypto/pkcs12/p12_sbag.o crypto/pkcs12/p12_utl.o crypto/pkcs12/pk12err.o crypto/pkcs7/bio_pk7.o crypto/pkcs7/pk7_asn1.o crypto/pkcs7/pk7_attr.o crypto/pkcs7/pk7_doit.o crypto/pkcs7/pk7_lib.o crypto/pkcs7/pk7_mime.o crypto/pkcs7/pk7_smime.o crypto/pkcs7/pkcs7err.o crypto/poly1305/poly1305.o crypto/rand/md_rand.o crypto/rand/rand_egd.o crypto/rand/rand_err.o crypto/rand/rand_lib.o crypto/rand/rand_unix.o crypto/rand/rand_vms.o crypto/rand/rand_win.o crypto/rand/randfile.o crypto/rc2/rc2_cbc.o crypto/rc2/rc2_ecb.o crypto/rc2/rc2_skey.o crypto/rc2/rc2cfb64.o crypto/rc2/rc2ofb64.o crypto/rc4/rc4_enc.o crypto/rc4/rc4_skey.o crypto/ripemd/rmd_dgst.o crypto/ripemd/rmd_one.o crypto/rsa/rsa_ameth.o crypto/rsa/rsa_asn1.o crypto/rsa/rsa_chk.o crypto/rsa/rsa_crpt.o crypto/rsa/rsa_depr.o crypto/rsa/rsa_err.o crypto/rsa/rsa_gen.o crypto/rsa/rsa_lib.o crypto/rsa/rsa_meth.o crypto/rsa/rsa_none.o crypto/rsa/rsa_null.o crypto/rsa/rsa_oaep.o crypto/rsa/rsa_ossl.o crypto/rsa/rsa_pk1.o crypto/rsa/rsa_pmeth.o crypto/rsa/rsa_prn.o crypto/rsa/rsa_pss.o crypto/rsa/rsa_saos.o crypto/rsa/rsa_sign.o crypto/rsa/rsa_ssl.o crypto/rsa/rsa_x931.o crypto/rsa/rsa_x931g.o crypto/seed/seed.o crypto/seed/seed_cbc.o crypto/seed/seed_cfb.o crypto/seed/seed_ecb.o crypto/seed/seed_ofb.o crypto/sha/sha1_one.o crypto/sha/sha1dgst.o crypto/sha/sha256.o crypto/sha/sha512.o crypto/srp/srp_lib.o crypto/srp/srp_vfy.o crypto/stack/stack.o crypto/threads_none.o crypto/threads_pthread.o crypto/threads_win.o crypto/ts/ts_asn1.o crypto/ts/ts_conf.o crypto/ts/ts_err.o crypto/ts/ts_lib.o crypto/ts/ts_req_print.o crypto/ts/ts_req_utils.o crypto/ts/ts_rsp_print.o crypto/ts/ts_rsp_sign.o crypto/ts/ts_rsp_utils.o crypto/ts/ts_rsp_verify.o crypto/ts/ts_verify_ctx.o crypto/txt_db/txt_db.o crypto/ui/ui_err.o crypto/ui/ui_lib.o crypto/ui/ui_openssl.o crypto/ui/ui_util.o crypto/uid.o crypto/whrlpool/wp_block.o crypto/whrlpool/wp_dgst.o crypto/x509/by_dir.o crypto/x509/by_file.o crypto/x509/t_crl.o crypto/x509/t_req.o crypto/x509/t_x509.o crypto/x509/x509_att.o crypto/x509/x509_cmp.o crypto/x509/x509_d2.o crypto/x509/x509_def.o crypto/x509/x509_err.o crypto/x509/x509_ext.o crypto/x509/x509_lu.o crypto/x509/x509_obj.o crypto/x509/x509_r2x.o crypto/x509/x509_req.o crypto/x509/x509_set.o crypto/x509/x509_trs.o crypto/x509/x509_txt.o crypto/x509/x509_v3.o crypto/x509/x509_vfy.o crypto/x509/x509_vpm.o crypto/x509/x509cset.o crypto/x509/x509name.o crypto/x509/x509rset.o crypto/x509/x509spki.o crypto/x509/x509type.o crypto/x509/x_all.o crypto/x509/x_attrib.o crypto/x509/x_crl.o crypto/x509/x_exten.o crypto/x509/x_name.o crypto/x509/x_pubkey.o crypto/x509/x_req.o crypto/x509/x_x509.o crypto/x509/x_x509a.o crypto/x509v3/pcy_cache.o crypto/x509v3/pcy_data.o crypto/x509v3/pcy_lib.o crypto/x509v3/pcy_map.o crypto/x509v3/pcy_node.o crypto/x509v3/pcy_tree.o crypto/x509v3/v3_addr.o crypto/x509v3/v3_akey.o crypto/x509v3/v3_akeya.o crypto/x509v3/v3_alt.o crypto/x509v3/v3_asid.o crypto/x509v3/v3_bcons.o crypto/x509v3/v3_bitst.o crypto/x509v3/v3_conf.o crypto/x509v3/v3_cpols.o crypto/x509v3/v3_crld.o crypto/x509v3/v3_enum.o crypto/x509v3/v3_extku.o crypto/x509v3/v3_genn.o crypto/x509v3/v3_ia5.o crypto/x509v3/v3_info.o crypto/x509v3/v3_int.o crypto/x509v3/v3_lib.o crypto/x509v3/v3_ncons.o crypto/x509v3/v3_pci.o crypto/x509v3/v3_pcia.o crypto/x509v3/v3_pcons.o crypto/x509v3/v3_pku.o crypto/x509v3/v3_pmaps.o crypto/x509v3/v3_prn.o crypto/x509v3/v3_purp.o crypto/x509v3/v3_skey.o crypto/x509v3/v3_sxnet.o crypto/x509v3/v3_tlsf.o crypto/x509v3/v3_utl.o crypto/x509v3/v3err.o
	$(AR) $@ $?
	$(RANLIB) $@ || echo Never mind.
crypto/aes/aes_cbc.o: crypto/aes/aes_cbc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/aes/aes_cbc.c
crypto/aes/aes_cfb.o: crypto/aes/aes_cfb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/aes/aes_cfb.c
crypto/aes/aes_core.o: crypto/aes/aes_core.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/aes/aes_core.c
crypto/aes/aes_ecb.o: crypto/aes/aes_ecb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/aes/aes_ecb.c
crypto/aes/aes_ige.o: crypto/aes/aes_ige.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/aes/aes_ige.c
crypto/aes/aes_misc.o: crypto/aes/aes_misc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/aes/aes_misc.c
crypto/aes/aes_ofb.o: crypto/aes/aes_ofb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/aes/aes_ofb.c
crypto/aes/aes_wrap.o: crypto/aes/aes_wrap.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/aes/aes_wrap.c
crypto/asn1/a_bitstr.o: crypto/asn1/a_bitstr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_bitstr.c
crypto/asn1/a_d2i_fp.o: crypto/asn1/a_d2i_fp.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_d2i_fp.c
crypto/asn1/a_digest.o: crypto/asn1/a_digest.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_digest.c
crypto/asn1/a_dup.o: crypto/asn1/a_dup.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_dup.c
crypto/asn1/a_gentm.o: crypto/asn1/a_gentm.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_gentm.c
crypto/asn1/a_i2d_fp.o: crypto/asn1/a_i2d_fp.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_i2d_fp.c
crypto/asn1/a_int.o: crypto/asn1/a_int.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_int.c
crypto/asn1/a_mbstr.o: crypto/asn1/a_mbstr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_mbstr.c
crypto/asn1/a_object.o: crypto/asn1/a_object.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_object.c
crypto/asn1/a_octet.o: crypto/asn1/a_octet.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_octet.c
crypto/asn1/a_print.o: crypto/asn1/a_print.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_print.c
crypto/asn1/a_sign.o: crypto/asn1/a_sign.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_sign.c
crypto/asn1/a_strex.o: crypto/asn1/a_strex.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_strex.c
crypto/asn1/a_strnid.o: crypto/asn1/a_strnid.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_strnid.c
crypto/asn1/a_time.o: crypto/asn1/a_time.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_time.c
crypto/asn1/a_type.o: crypto/asn1/a_type.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_type.c
crypto/asn1/a_utctm.o: crypto/asn1/a_utctm.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_utctm.c
crypto/asn1/a_utf8.o: crypto/asn1/a_utf8.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_utf8.c
crypto/asn1/a_verify.o: crypto/asn1/a_verify.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/a_verify.c
crypto/asn1/ameth_lib.o: crypto/asn1/ameth_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/ameth_lib.c
crypto/asn1/asn1_err.o: crypto/asn1/asn1_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/asn1_err.c
crypto/asn1/asn1_gen.o: crypto/asn1/asn1_gen.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/asn1_gen.c
crypto/asn1/asn1_lib.o: crypto/asn1/asn1_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/asn1_lib.c
crypto/asn1/asn1_par.o: crypto/asn1/asn1_par.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/asn1_par.c
crypto/asn1/asn_mime.o: crypto/asn1/asn_mime.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/asn_mime.c
crypto/asn1/asn_moid.o: crypto/asn1/asn_moid.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/asn_moid.c
crypto/asn1/asn_mstbl.o: crypto/asn1/asn_mstbl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/asn_mstbl.c
crypto/asn1/asn_pack.o: crypto/asn1/asn_pack.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/asn_pack.c
crypto/asn1/bio_asn1.o: crypto/asn1/bio_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/bio_asn1.c
crypto/asn1/bio_ndef.o: crypto/asn1/bio_ndef.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/bio_ndef.c
crypto/asn1/d2i_pr.o: crypto/asn1/d2i_pr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/d2i_pr.c
crypto/asn1/d2i_pu.o: crypto/asn1/d2i_pu.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/d2i_pu.c
crypto/asn1/evp_asn1.o: crypto/asn1/evp_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/evp_asn1.c
crypto/asn1/f_int.o: crypto/asn1/f_int.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/f_int.c
crypto/asn1/f_string.o: crypto/asn1/f_string.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/f_string.c
crypto/asn1/i2d_pr.o: crypto/asn1/i2d_pr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/i2d_pr.c
crypto/asn1/i2d_pu.o: crypto/asn1/i2d_pu.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/i2d_pu.c
crypto/asn1/n_pkey.o: crypto/asn1/n_pkey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/n_pkey.c
crypto/asn1/nsseq.o: crypto/asn1/nsseq.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/nsseq.c
crypto/asn1/p5_pbe.o: crypto/asn1/p5_pbe.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/p5_pbe.c
crypto/asn1/p5_pbev2.o: crypto/asn1/p5_pbev2.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/p5_pbev2.c
crypto/asn1/p5_scrypt.o: crypto/asn1/p5_scrypt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/p5_scrypt.c
crypto/asn1/p8_pkey.o: crypto/asn1/p8_pkey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/p8_pkey.c
crypto/asn1/t_bitst.o: crypto/asn1/t_bitst.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/t_bitst.c
crypto/asn1/t_pkey.o: crypto/asn1/t_pkey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/t_pkey.c
crypto/asn1/t_spki.o: crypto/asn1/t_spki.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/t_spki.c
crypto/asn1/tasn_dec.o: crypto/asn1/tasn_dec.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/tasn_dec.c
crypto/asn1/tasn_enc.o: crypto/asn1/tasn_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/tasn_enc.c
crypto/asn1/tasn_fre.o: crypto/asn1/tasn_fre.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/tasn_fre.c
crypto/asn1/tasn_new.o: crypto/asn1/tasn_new.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/tasn_new.c
crypto/asn1/tasn_prn.o: crypto/asn1/tasn_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/tasn_prn.c
crypto/asn1/tasn_scn.o: crypto/asn1/tasn_scn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/tasn_scn.c
crypto/asn1/tasn_typ.o: crypto/asn1/tasn_typ.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/tasn_typ.c
crypto/asn1/tasn_utl.o: crypto/asn1/tasn_utl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/tasn_utl.c
crypto/asn1/x_algor.o: crypto/asn1/x_algor.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/x_algor.c
crypto/asn1/x_bignum.o: crypto/asn1/x_bignum.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/x_bignum.c
crypto/asn1/x_info.o: crypto/asn1/x_info.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/x_info.c
crypto/asn1/x_long.o: crypto/asn1/x_long.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/x_long.c
crypto/asn1/x_pkey.o: crypto/asn1/x_pkey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/x_pkey.c
crypto/asn1/x_sig.o: crypto/asn1/x_sig.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/x_sig.c
crypto/asn1/x_spki.o: crypto/asn1/x_spki.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/x_spki.c
crypto/asn1/x_val.o: crypto/asn1/x_val.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/asn1/x_val.c
crypto/async/arch/async_null.o: crypto/async/arch/async_null.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/async/arch/async_null.c
crypto/async/arch/async_posix.o: crypto/async/arch/async_posix.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/async/arch/async_posix.c
crypto/async/arch/async_win.o: crypto/async/arch/async_win.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/async/arch/async_win.c
crypto/async/async.o: crypto/async/async.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/async/async.c
crypto/async/async_err.o: crypto/async/async_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/async/async_err.c
crypto/async/async_wait.o: crypto/async/async_wait.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/async/async_wait.c
crypto/bf/bf_cfb64.o: crypto/bf/bf_cfb64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bf/bf_cfb64.c
crypto/bf/bf_ecb.o: crypto/bf/bf_ecb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bf/bf_ecb.c
crypto/bf/bf_enc.o: crypto/bf/bf_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bf/bf_enc.c
crypto/bf/bf_ofb64.o: crypto/bf/bf_ofb64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bf/bf_ofb64.c
crypto/bf/bf_skey.o: crypto/bf/bf_skey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bf/bf_skey.c
crypto/bio/b_addr.o: crypto/bio/b_addr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/b_addr.c
crypto/bio/b_dump.o: crypto/bio/b_dump.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/b_dump.c
crypto/bio/b_print.o: crypto/bio/b_print.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/b_print.c
crypto/bio/b_sock.o: crypto/bio/b_sock.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/b_sock.c
crypto/bio/b_sock2.o: crypto/bio/b_sock2.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/b_sock2.c
crypto/bio/bf_buff.o: crypto/bio/bf_buff.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bf_buff.c
crypto/bio/bf_lbuf.o: crypto/bio/bf_lbuf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bf_lbuf.c
crypto/bio/bf_nbio.o: crypto/bio/bf_nbio.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bf_nbio.c
crypto/bio/bf_null.o: crypto/bio/bf_null.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bf_null.c
crypto/bio/bio_cb.o: crypto/bio/bio_cb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bio_cb.c
crypto/bio/bio_err.o: crypto/bio/bio_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bio_err.c
crypto/bio/bio_lib.o: crypto/bio/bio_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bio_lib.c
crypto/bio/bio_meth.o: crypto/bio/bio_meth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bio_meth.c
crypto/bio/bss_acpt.o: crypto/bio/bss_acpt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_acpt.c
crypto/bio/bss_bio.o: crypto/bio/bss_bio.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_bio.c
crypto/bio/bss_conn.o: crypto/bio/bss_conn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_conn.c
crypto/bio/bss_dgram.o: crypto/bio/bss_dgram.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_dgram.c
crypto/bio/bss_fd.o: crypto/bio/bss_fd.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_fd.c
crypto/bio/bss_file.o: crypto/bio/bss_file.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_file.c
crypto/bio/bss_log.o: crypto/bio/bss_log.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_log.c
crypto/bio/bss_mem.o: crypto/bio/bss_mem.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_mem.c
crypto/bio/bss_null.o: crypto/bio/bss_null.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_null.c
crypto/bio/bss_sock.o: crypto/bio/bss_sock.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bio/bss_sock.c
crypto/blake2/blake2b.o: crypto/blake2/blake2b.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/blake2/blake2b.c
crypto/blake2/blake2s.o: crypto/blake2/blake2s.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/blake2/blake2s.c
crypto/blake2/m_blake2b.o: crypto/blake2/m_blake2b.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/blake2/m_blake2b.c
crypto/blake2/m_blake2s.o: crypto/blake2/m_blake2s.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/blake2/m_blake2s.c
crypto/bn/bn_add.o: crypto/bn/bn_add.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_add.c
crypto/bn/bn_asm.o: crypto/bn/bn_asm.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_asm.c
crypto/bn/bn_blind.o: crypto/bn/bn_blind.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_blind.c
crypto/bn/bn_const.o: crypto/bn/bn_const.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_const.c
crypto/bn/bn_ctx.o: crypto/bn/bn_ctx.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_ctx.c
crypto/bn/bn_depr.o: crypto/bn/bn_depr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_depr.c
crypto/bn/bn_dh.o: crypto/bn/bn_dh.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_dh.c
crypto/bn/bn_div.o: crypto/bn/bn_div.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_div.c
crypto/bn/bn_err.o: crypto/bn/bn_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_err.c
crypto/bn/bn_exp.o: crypto/bn/bn_exp.c
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_exp.c
crypto/bn/bn_exp2.o: crypto/bn/bn_exp2.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_exp2.c
crypto/bn/bn_gcd.o: crypto/bn/bn_gcd.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_gcd.c
crypto/bn/bn_gf2m.o: crypto/bn/bn_gf2m.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_gf2m.c
crypto/bn/bn_intern.o: crypto/bn/bn_intern.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_intern.c
crypto/bn/bn_kron.o: crypto/bn/bn_kron.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_kron.c
crypto/bn/bn_lib.o: crypto/bn/bn_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_lib.c
crypto/bn/bn_mod.o: crypto/bn/bn_mod.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_mod.c
crypto/bn/bn_mont.o: crypto/bn/bn_mont.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_mont.c
crypto/bn/bn_mpi.o: crypto/bn/bn_mpi.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_mpi.c
crypto/bn/bn_mul.o: crypto/bn/bn_mul.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_mul.c
crypto/bn/bn_nist.o: crypto/bn/bn_nist.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_nist.c
crypto/bn/bn_prime.o: crypto/bn/bn_prime.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_prime.c
crypto/bn/bn_print.o: crypto/bn/bn_print.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_print.c
crypto/bn/bn_rand.o: crypto/bn/bn_rand.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_rand.c
crypto/bn/bn_recp.o: crypto/bn/bn_recp.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_recp.c
crypto/bn/bn_shift.o: crypto/bn/bn_shift.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_shift.c
crypto/bn/bn_sqr.o: crypto/bn/bn_sqr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_sqr.c
crypto/bn/bn_sqrt.o: crypto/bn/bn_sqrt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_sqrt.c
crypto/bn/bn_srp.o: crypto/bn/bn_srp.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_srp.c
crypto/bn/bn_word.o: crypto/bn/bn_word.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_word.c
crypto/bn/bn_x931p.o: crypto/bn/bn_x931p.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/bn/bn_x931p.c
crypto/buffer/buf_err.o: crypto/buffer/buf_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/buffer/buf_err.c
crypto/buffer/buffer.o: crypto/buffer/buffer.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/buffer/buffer.c
crypto/camellia/camellia.o: crypto/camellia/camellia.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/camellia/camellia.c
crypto/camellia/cmll_cbc.o: crypto/camellia/cmll_cbc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/camellia/cmll_cbc.c
crypto/camellia/cmll_cfb.o: crypto/camellia/cmll_cfb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/camellia/cmll_cfb.c
crypto/camellia/cmll_ctr.o: crypto/camellia/cmll_ctr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/camellia/cmll_ctr.c
crypto/camellia/cmll_ecb.o: crypto/camellia/cmll_ecb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/camellia/cmll_ecb.c
crypto/camellia/cmll_misc.o: crypto/camellia/cmll_misc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/camellia/cmll_misc.c
crypto/camellia/cmll_ofb.o: crypto/camellia/cmll_ofb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/camellia/cmll_ofb.c
crypto/cast/c_cfb64.o: crypto/cast/c_cfb64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cast/c_cfb64.c
crypto/cast/c_ecb.o: crypto/cast/c_ecb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cast/c_ecb.c
crypto/cast/c_enc.o: crypto/cast/c_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cast/c_enc.c
crypto/cast/c_ofb64.o: crypto/cast/c_ofb64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cast/c_ofb64.c
crypto/cast/c_skey.o: crypto/cast/c_skey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cast/c_skey.c
crypto/chacha/chacha_enc.o: crypto/chacha/chacha_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/chacha/chacha_enc.c
crypto/cmac/cm_ameth.o: crypto/cmac/cm_ameth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cmac/cm_ameth.c
crypto/cmac/cm_pmeth.o: crypto/cmac/cm_pmeth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cmac/cm_pmeth.c
crypto/cmac/cmac.o: crypto/cmac/cmac.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cmac/cmac.c
crypto/cms/cms_asn1.o: crypto/cms/cms_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_asn1.c
crypto/cms/cms_att.o: crypto/cms/cms_att.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_att.c
crypto/cms/cms_cd.o: crypto/cms/cms_cd.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_cd.c
crypto/cms/cms_dd.o: crypto/cms/cms_dd.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_dd.c
crypto/cms/cms_enc.o: crypto/cms/cms_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_enc.c
crypto/cms/cms_env.o: crypto/cms/cms_env.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_env.c
crypto/cms/cms_err.o: crypto/cms/cms_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_err.c
crypto/cms/cms_ess.o: crypto/cms/cms_ess.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_ess.c
crypto/cms/cms_io.o: crypto/cms/cms_io.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_io.c
crypto/cms/cms_kari.o: crypto/cms/cms_kari.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_kari.c
crypto/cms/cms_lib.o: crypto/cms/cms_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_lib.c
crypto/cms/cms_pwri.o: crypto/cms/cms_pwri.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_pwri.c
crypto/cms/cms_sd.o: crypto/cms/cms_sd.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_sd.c
crypto/cms/cms_smime.o: crypto/cms/cms_smime.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cms/cms_smime.c
crypto/comp/c_zlib.o: crypto/comp/c_zlib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/comp/c_zlib.c
crypto/comp/comp_err.o: crypto/comp/comp_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/comp/comp_err.c
crypto/comp/comp_lib.o: crypto/comp/comp_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/comp/comp_lib.c
crypto/conf/conf_api.o: crypto/conf/conf_api.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/conf/conf_api.c
crypto/conf/conf_def.o: crypto/conf/conf_def.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/conf/conf_def.c
crypto/conf/conf_err.o: crypto/conf/conf_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/conf/conf_err.c
crypto/conf/conf_lib.o: crypto/conf/conf_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/conf/conf_lib.c
crypto/conf/conf_mall.o: crypto/conf/conf_mall.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/conf/conf_mall.c
crypto/conf/conf_mod.o: crypto/conf/conf_mod.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/conf/conf_mod.c
crypto/conf/conf_sap.o: crypto/conf/conf_sap.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/conf/conf_sap.c
crypto/cpt_err.o: crypto/cpt_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cpt_err.c
crypto/cryptlib.o: crypto/cryptlib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cryptlib.c
crypto/ct/ct_b64.o: crypto/ct/ct_b64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_b64.c
crypto/ct/ct_err.o: crypto/ct/ct_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_err.c
crypto/ct/ct_log.o: crypto/ct/ct_log.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_log.c
crypto/ct/ct_oct.o: crypto/ct/ct_oct.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_oct.c
crypto/ct/ct_policy.o: crypto/ct/ct_policy.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_policy.c
crypto/ct/ct_prn.o: crypto/ct/ct_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_prn.c
crypto/ct/ct_sct.o: crypto/ct/ct_sct.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_sct.c
crypto/ct/ct_sct_ctx.o: crypto/ct/ct_sct_ctx.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_sct_ctx.c
crypto/ct/ct_vfy.o: crypto/ct/ct_vfy.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_vfy.c
crypto/ct/ct_x509v3.o: crypto/ct/ct_x509v3.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ct/ct_x509v3.c
crypto/cversion.o: crypto/cversion.c crypto/buildinf.h
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/cversion.c
crypto/buildinf.h: util/mkbuildinf.pl configdata.pm
	$(PERL) util/mkbuildinf.pl "$(CC) $(CFLAGS_Q)" "$(PLATFORM)" > $@
crypto/des/cbc_cksm.o: crypto/des/cbc_cksm.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/cbc_cksm.c
crypto/des/cbc_enc.o: crypto/des/cbc_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/cbc_enc.c
crypto/des/cfb64ede.o: crypto/des/cfb64ede.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/cfb64ede.c
crypto/des/cfb64enc.o: crypto/des/cfb64enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/cfb64enc.c
crypto/des/cfb_enc.o: crypto/des/cfb_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/cfb_enc.c
crypto/des/des_enc.o: crypto/des/des_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/des_enc.c
crypto/des/ecb3_enc.o: crypto/des/ecb3_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/ecb3_enc.c
crypto/des/ecb_enc.o: crypto/des/ecb_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/ecb_enc.c
crypto/des/fcrypt.o: crypto/des/fcrypt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/fcrypt.c
crypto/des/fcrypt_b.o: crypto/des/fcrypt_b.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/fcrypt_b.c
crypto/des/ofb64ede.o: crypto/des/ofb64ede.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/ofb64ede.c
crypto/des/ofb64enc.o: crypto/des/ofb64enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/ofb64enc.c
crypto/des/ofb_enc.o: crypto/des/ofb_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/ofb_enc.c
crypto/des/pcbc_enc.o: crypto/des/pcbc_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/pcbc_enc.c
crypto/des/qud_cksm.o: crypto/des/qud_cksm.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/qud_cksm.c
crypto/des/rand_key.o: crypto/des/rand_key.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/rand_key.c
crypto/des/rpc_enc.o: crypto/des/rpc_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/rpc_enc.c
crypto/des/set_key.o: crypto/des/set_key.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/set_key.c
crypto/des/str2key.o: crypto/des/str2key.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/str2key.c
crypto/des/xcbc_enc.o: crypto/des/xcbc_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/des/xcbc_enc.c
crypto/dh/dh_ameth.o: crypto/dh/dh_ameth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_ameth.c
crypto/dh/dh_asn1.o: crypto/dh/dh_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_asn1.c
crypto/dh/dh_check.o: crypto/dh/dh_check.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_check.c
crypto/dh/dh_depr.o: crypto/dh/dh_depr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_depr.c
crypto/dh/dh_err.o: crypto/dh/dh_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_err.c
crypto/dh/dh_gen.o: crypto/dh/dh_gen.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_gen.c
crypto/dh/dh_kdf.o: crypto/dh/dh_kdf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_kdf.c
crypto/dh/dh_key.o: crypto/dh/dh_key.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_key.c
crypto/dh/dh_lib.o: crypto/dh/dh_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_lib.c
crypto/dh/dh_meth.o: crypto/dh/dh_meth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_meth.c
crypto/dh/dh_pmeth.o: crypto/dh/dh_pmeth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_pmeth.c
crypto/dh/dh_prn.o: crypto/dh/dh_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_prn.c
crypto/dh/dh_rfc5114.o: crypto/dh/dh_rfc5114.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dh/dh_rfc5114.c
crypto/dsa/dsa_ameth.o: crypto/dsa/dsa_ameth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_ameth.c
crypto/dsa/dsa_asn1.o: crypto/dsa/dsa_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_asn1.c
crypto/dsa/dsa_depr.o: crypto/dsa/dsa_depr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_depr.c
crypto/dsa/dsa_err.o: crypto/dsa/dsa_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_err.c
crypto/dsa/dsa_gen.o: crypto/dsa/dsa_gen.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_gen.c
crypto/dsa/dsa_key.o: crypto/dsa/dsa_key.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_key.c
crypto/dsa/dsa_lib.o: crypto/dsa/dsa_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_lib.c
crypto/dsa/dsa_meth.o: crypto/dsa/dsa_meth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_meth.c
crypto/dsa/dsa_ossl.o: crypto/dsa/dsa_ossl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_ossl.c
crypto/dsa/dsa_pmeth.o: crypto/dsa/dsa_pmeth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_pmeth.c
crypto/dsa/dsa_prn.o: crypto/dsa/dsa_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_prn.c
crypto/dsa/dsa_sign.o: crypto/dsa/dsa_sign.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_sign.c
crypto/dsa/dsa_vrf.o: crypto/dsa/dsa_vrf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dsa/dsa_vrf.c
crypto/dso/dso_dl.o: crypto/dso/dso_dl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dso/dso_dl.c
crypto/dso/dso_dlfcn.o: crypto/dso/dso_dlfcn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dso/dso_dlfcn.c
crypto/dso/dso_err.o: crypto/dso/dso_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dso/dso_err.c
crypto/dso/dso_lib.o: crypto/dso/dso_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dso/dso_lib.c
crypto/dso/dso_openssl.o: crypto/dso/dso_openssl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dso/dso_openssl.c
crypto/dso/dso_vms.o: crypto/dso/dso_vms.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dso/dso_vms.c
crypto/dso/dso_win32.o: crypto/dso/dso_win32.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/dso/dso_win32.c
crypto/ebcdic.o: crypto/ebcdic.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ebcdic.c
crypto/ec/curve25519.o: crypto/ec/curve25519.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/curve25519.c
crypto/ec/ec2_mult.o: crypto/ec/ec2_mult.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec2_mult.c
crypto/ec/ec2_oct.o: crypto/ec/ec2_oct.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec2_oct.c
crypto/ec/ec2_smpl.o: crypto/ec/ec2_smpl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec2_smpl.c
crypto/ec/ec_ameth.o: crypto/ec/ec_ameth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_ameth.c
crypto/ec/ec_asn1.o: crypto/ec/ec_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_asn1.c
crypto/ec/ec_check.o: crypto/ec/ec_check.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_check.c
crypto/ec/ec_curve.o: crypto/ec/ec_curve.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_curve.c
crypto/ec/ec_cvt.o: crypto/ec/ec_cvt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_cvt.c
crypto/ec/ec_err.o: crypto/ec/ec_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_err.c
crypto/ec/ec_key.o: crypto/ec/ec_key.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_key.c
crypto/ec/ec_kmeth.o: crypto/ec/ec_kmeth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_kmeth.c
crypto/ec/ec_lib.o: crypto/ec/ec_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_lib.c
crypto/ec/ec_mult.o: crypto/ec/ec_mult.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_mult.c
crypto/ec/ec_oct.o: crypto/ec/ec_oct.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_oct.c
crypto/ec/ec_pmeth.o: crypto/ec/ec_pmeth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_pmeth.c
crypto/ec/ec_print.o: crypto/ec/ec_print.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ec_print.c
crypto/ec/ecdh_kdf.o: crypto/ec/ecdh_kdf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecdh_kdf.c
crypto/ec/ecdh_ossl.o: crypto/ec/ecdh_ossl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecdh_ossl.c
crypto/ec/ecdsa_ossl.o: crypto/ec/ecdsa_ossl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecdsa_ossl.c
crypto/ec/ecdsa_sign.o: crypto/ec/ecdsa_sign.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecdsa_sign.c
crypto/ec/ecdsa_vrf.o: crypto/ec/ecdsa_vrf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecdsa_vrf.c
crypto/ec/eck_prn.o: crypto/ec/eck_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/eck_prn.c
crypto/ec/ecp_mont.o: crypto/ec/ecp_mont.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecp_mont.c
crypto/ec/ecp_nist.o: crypto/ec/ecp_nist.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecp_nist.c
crypto/ec/ecp_nistp224.o: crypto/ec/ecp_nistp224.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecp_nistp224.c
crypto/ec/ecp_nistp256.o: crypto/ec/ecp_nistp256.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecp_nistp256.c
crypto/ec/ecp_nistp521.o: crypto/ec/ecp_nistp521.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecp_nistp521.c
crypto/ec/ecp_nistputil.o: crypto/ec/ecp_nistputil.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecp_nistputil.c
crypto/ec/ecp_oct.o: crypto/ec/ecp_oct.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecp_oct.c
crypto/ec/ecp_smpl.o: crypto/ec/ecp_smpl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecp_smpl.c
crypto/ec/ecx_meth.o: crypto/ec/ecx_meth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ec/ecx_meth.c
crypto/engine/eng_all.o: crypto/engine/eng_all.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_all.c
crypto/engine/eng_cnf.o: crypto/engine/eng_cnf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_cnf.c
crypto/engine/eng_cryptodev.o: crypto/engine/eng_cryptodev.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_cryptodev.c
crypto/engine/eng_ctrl.o: crypto/engine/eng_ctrl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_ctrl.c
crypto/engine/eng_dyn.o: crypto/engine/eng_dyn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_dyn.c
crypto/engine/eng_err.o: crypto/engine/eng_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_err.c
crypto/engine/eng_fat.o: crypto/engine/eng_fat.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_fat.c
crypto/engine/eng_init.o: crypto/engine/eng_init.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_init.c
crypto/engine/eng_lib.o: crypto/engine/eng_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_lib.c
crypto/engine/eng_list.o: crypto/engine/eng_list.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_list.c
crypto/engine/eng_openssl.o: crypto/engine/eng_openssl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_openssl.c
crypto/engine/eng_pkey.o: crypto/engine/eng_pkey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_pkey.c
crypto/engine/eng_rdrand.o: crypto/engine/eng_rdrand.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_rdrand.c
crypto/engine/eng_table.o: crypto/engine/eng_table.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/eng_table.c
crypto/engine/tb_asnmth.o: crypto/engine/tb_asnmth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_asnmth.c
crypto/engine/tb_cipher.o: crypto/engine/tb_cipher.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_cipher.c
crypto/engine/tb_dh.o: crypto/engine/tb_dh.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_dh.c
crypto/engine/tb_digest.o: crypto/engine/tb_digest.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_digest.c
crypto/engine/tb_dsa.o: crypto/engine/tb_dsa.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_dsa.c
crypto/engine/tb_eckey.o: crypto/engine/tb_eckey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_eckey.c
crypto/engine/tb_pkmeth.o: crypto/engine/tb_pkmeth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_pkmeth.c
crypto/engine/tb_rand.o: crypto/engine/tb_rand.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_rand.c
crypto/engine/tb_rsa.o: crypto/engine/tb_rsa.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/engine/tb_rsa.c
crypto/err/err.o: crypto/err/err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/err/err.c
crypto/err/err_all.o: crypto/err/err_all.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/err/err_all.c
crypto/err/err_prn.o: crypto/err/err_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/err/err_prn.c
crypto/evp/bio_b64.o: crypto/evp/bio_b64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/bio_b64.c
crypto/evp/bio_enc.o: crypto/evp/bio_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/bio_enc.c
crypto/evp/bio_md.o: crypto/evp/bio_md.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/bio_md.c
crypto/evp/bio_ok.o: crypto/evp/bio_ok.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/bio_ok.c
crypto/evp/c_allc.o: crypto/evp/c_allc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/c_allc.c
crypto/evp/c_alld.o: crypto/evp/c_alld.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/c_alld.c
crypto/evp/cmeth_lib.o: crypto/evp/cmeth_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/cmeth_lib.c
crypto/evp/digest.o: crypto/evp/digest.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/digest.c
crypto/evp/e_aes.o: crypto/evp/e_aes.c
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto -Icrypto/modes $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_aes.c
crypto/evp/e_aes_cbc_hmac_sha1.o: crypto/evp/e_aes_cbc_hmac_sha1.c
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto/modes $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_aes_cbc_hmac_sha1.c
crypto/evp/e_aes_cbc_hmac_sha256.o: crypto/evp/e_aes_cbc_hmac_sha256.c
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto/modes $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_aes_cbc_hmac_sha256.c
crypto/evp/e_bf.o: crypto/evp/e_bf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_bf.c
crypto/evp/e_camellia.o: crypto/evp/e_camellia.c
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto -Icrypto/modes $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_camellia.c
crypto/evp/e_cast.o: crypto/evp/e_cast.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_cast.c
crypto/evp/e_chacha20_poly1305.o: crypto/evp/e_chacha20_poly1305.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_chacha20_poly1305.c
crypto/evp/e_des.o: crypto/evp/e_des.c
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_des.c
crypto/evp/e_des3.o: crypto/evp/e_des3.c
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_des3.c
crypto/evp/e_idea.o: crypto/evp/e_idea.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_idea.c
crypto/evp/e_null.o: crypto/evp/e_null.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_null.c
crypto/evp/e_old.o: crypto/evp/e_old.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_old.c
crypto/evp/e_rc2.o: crypto/evp/e_rc2.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_rc2.c
crypto/evp/e_rc4.o: crypto/evp/e_rc4.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_rc4.c
crypto/evp/e_rc4_hmac_md5.o: crypto/evp/e_rc4_hmac_md5.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_rc4_hmac_md5.c
crypto/evp/e_rc5.o: crypto/evp/e_rc5.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_rc5.c
crypto/evp/e_seed.o: crypto/evp/e_seed.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_seed.c
crypto/evp/e_xcbc_d.o: crypto/evp/e_xcbc_d.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/e_xcbc_d.c
crypto/evp/encode.o: crypto/evp/encode.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/encode.c
crypto/evp/evp_cnf.o: crypto/evp/evp_cnf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/evp_cnf.c
crypto/evp/evp_enc.o: crypto/evp/evp_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/evp_enc.c
crypto/evp/evp_err.o: crypto/evp/evp_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/evp_err.c
crypto/evp/evp_key.o: crypto/evp/evp_key.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/evp_key.c
crypto/evp/evp_lib.o: crypto/evp/evp_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/evp_lib.c
crypto/evp/evp_pbe.o: crypto/evp/evp_pbe.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/evp_pbe.c
crypto/evp/evp_pkey.o: crypto/evp/evp_pkey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/evp_pkey.c
crypto/evp/m_md2.o: crypto/evp/m_md2.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_md2.c
crypto/evp/m_md4.o: crypto/evp/m_md4.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_md4.c
crypto/evp/m_md5.o: crypto/evp/m_md5.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_md5.c
crypto/evp/m_md5_sha1.o: crypto/evp/m_md5_sha1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_md5_sha1.c
crypto/evp/m_mdc2.o: crypto/evp/m_mdc2.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_mdc2.c
crypto/evp/m_null.o: crypto/evp/m_null.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_null.c
crypto/evp/m_ripemd.o: crypto/evp/m_ripemd.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_ripemd.c
crypto/evp/m_sha1.o: crypto/evp/m_sha1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_sha1.c
crypto/evp/m_sigver.o: crypto/evp/m_sigver.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_sigver.c
crypto/evp/m_wp.o: crypto/evp/m_wp.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/m_wp.c
crypto/evp/names.o: crypto/evp/names.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/names.c
crypto/evp/p5_crpt.o: crypto/evp/p5_crpt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p5_crpt.c
crypto/evp/p5_crpt2.o: crypto/evp/p5_crpt2.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p5_crpt2.c
crypto/evp/p_dec.o: crypto/evp/p_dec.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p_dec.c
crypto/evp/p_enc.o: crypto/evp/p_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p_enc.c
crypto/evp/p_lib.o: crypto/evp/p_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p_lib.c
crypto/evp/p_open.o: crypto/evp/p_open.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p_open.c
crypto/evp/p_seal.o: crypto/evp/p_seal.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p_seal.c
crypto/evp/p_sign.o: crypto/evp/p_sign.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p_sign.c
crypto/evp/p_verify.o: crypto/evp/p_verify.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/p_verify.c
crypto/evp/pmeth_fn.o: crypto/evp/pmeth_fn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/pmeth_fn.c
crypto/evp/pmeth_gn.o: crypto/evp/pmeth_gn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/pmeth_gn.c
crypto/evp/pmeth_lib.o: crypto/evp/pmeth_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/pmeth_lib.c
crypto/evp/scrypt.o: crypto/evp/scrypt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/evp/scrypt.c
crypto/ex_data.o: crypto/ex_data.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ex_data.c
crypto/hmac/hm_ameth.o: crypto/hmac/hm_ameth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/hmac/hm_ameth.c
crypto/hmac/hm_pmeth.o: crypto/hmac/hm_pmeth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/hmac/hm_pmeth.c
crypto/hmac/hmac.o: crypto/hmac/hmac.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/hmac/hmac.c
crypto/idea/i_cbc.o: crypto/idea/i_cbc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/idea/i_cbc.c
crypto/idea/i_cfb64.o: crypto/idea/i_cfb64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/idea/i_cfb64.c
crypto/idea/i_ecb.o: crypto/idea/i_ecb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/idea/i_ecb.c
crypto/idea/i_ofb64.o: crypto/idea/i_ofb64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/idea/i_ofb64.c
crypto/idea/i_skey.o: crypto/idea/i_skey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/idea/i_skey.c
crypto/init.o: crypto/init.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/init.c
crypto/kdf/hkdf.o: crypto/kdf/hkdf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/kdf/hkdf.c
crypto/kdf/kdf_err.o: crypto/kdf/kdf_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/kdf/kdf_err.c
crypto/kdf/tls1_prf.o: crypto/kdf/tls1_prf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/kdf/tls1_prf.c
crypto/lhash/lh_stats.o: crypto/lhash/lh_stats.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/lhash/lh_stats.c
crypto/lhash/lhash.o: crypto/lhash/lhash.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/lhash/lhash.c
crypto/md4/md4_dgst.o: crypto/md4/md4_dgst.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/md4/md4_dgst.c
crypto/md4/md4_one.o: crypto/md4/md4_one.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/md4/md4_one.c
crypto/md5/md5_dgst.o: crypto/md5/md5_dgst.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/md5/md5_dgst.c
crypto/md5/md5_one.o: crypto/md5/md5_one.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/md5/md5_one.c
crypto/mdc2/mdc2_one.o: crypto/mdc2/mdc2_one.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/mdc2/mdc2_one.c
crypto/mdc2/mdc2dgst.o: crypto/mdc2/mdc2dgst.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/mdc2/mdc2dgst.c
crypto/mem.o: crypto/mem.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/mem.c
crypto/mem_clr.o: crypto/mem_clr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/mem_clr.c
crypto/mem_dbg.o: crypto/mem_dbg.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/mem_dbg.c
crypto/mem_sec.o: crypto/mem_sec.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/mem_sec.c
crypto/modes/cbc128.o: crypto/modes/cbc128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/cbc128.c
crypto/modes/ccm128.o: crypto/modes/ccm128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/ccm128.c
crypto/modes/cfb128.o: crypto/modes/cfb128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/cfb128.c
crypto/modes/ctr128.o: crypto/modes/ctr128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/ctr128.c
crypto/modes/cts128.o: crypto/modes/cts128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/cts128.c
crypto/modes/gcm128.o: crypto/modes/gcm128.c
	$(CC)  -I. -Icrypto/include -Iinclude -Icrypto $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/gcm128.c
crypto/modes/ocb128.o: crypto/modes/ocb128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/ocb128.c
crypto/modes/ofb128.o: crypto/modes/ofb128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/ofb128.c
crypto/modes/wrap128.o: crypto/modes/wrap128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/wrap128.c
crypto/modes/xts128.o: crypto/modes/xts128.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/modes/xts128.c
crypto/o_dir.o: crypto/o_dir.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/o_dir.c
crypto/o_fips.o: crypto/o_fips.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/o_fips.c
crypto/o_fopen.o: crypto/o_fopen.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/o_fopen.c
crypto/o_init.o: crypto/o_init.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/o_init.c
crypto/o_str.o: crypto/o_str.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/o_str.c
crypto/o_time.o: crypto/o_time.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/o_time.c
crypto/objects/o_names.o: crypto/objects/o_names.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/objects/o_names.c
crypto/objects/obj_dat.o: crypto/objects/obj_dat.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/objects/obj_dat.c
crypto/objects/obj_err.o: crypto/objects/obj_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/objects/obj_err.c
crypto/objects/obj_lib.o: crypto/objects/obj_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/objects/obj_lib.c
crypto/objects/obj_xref.o: crypto/objects/obj_xref.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/objects/obj_xref.c
crypto/ocsp/ocsp_asn.o: crypto/ocsp/ocsp_asn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_asn.c
crypto/ocsp/ocsp_cl.o: crypto/ocsp/ocsp_cl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_cl.c
crypto/ocsp/ocsp_err.o: crypto/ocsp/ocsp_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_err.c
crypto/ocsp/ocsp_ext.o: crypto/ocsp/ocsp_ext.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_ext.c
crypto/ocsp/ocsp_ht.o: crypto/ocsp/ocsp_ht.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_ht.c
crypto/ocsp/ocsp_lib.o: crypto/ocsp/ocsp_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_lib.c
crypto/ocsp/ocsp_prn.o: crypto/ocsp/ocsp_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_prn.c
crypto/ocsp/ocsp_srv.o: crypto/ocsp/ocsp_srv.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_srv.c
crypto/ocsp/ocsp_vfy.o: crypto/ocsp/ocsp_vfy.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/ocsp_vfy.c
crypto/ocsp/v3_ocsp.o: crypto/ocsp/v3_ocsp.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ocsp/v3_ocsp.c
crypto/pem/pem_all.o: crypto/pem/pem_all.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_all.c
crypto/pem/pem_err.o: crypto/pem/pem_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_err.c
crypto/pem/pem_info.o: crypto/pem/pem_info.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_info.c
crypto/pem/pem_lib.o: crypto/pem/pem_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_lib.c
crypto/pem/pem_oth.o: crypto/pem/pem_oth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_oth.c
crypto/pem/pem_pk8.o: crypto/pem/pem_pk8.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_pk8.c
crypto/pem/pem_pkey.o: crypto/pem/pem_pkey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_pkey.c
crypto/pem/pem_sign.o: crypto/pem/pem_sign.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_sign.c
crypto/pem/pem_x509.o: crypto/pem/pem_x509.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_x509.c
crypto/pem/pem_xaux.o: crypto/pem/pem_xaux.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pem_xaux.c
crypto/pem/pvkfmt.o: crypto/pem/pvkfmt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pem/pvkfmt.c
crypto/pkcs12/p12_add.o: crypto/pkcs12/p12_add.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_add.c
crypto/pkcs12/p12_asn.o: crypto/pkcs12/p12_asn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_asn.c
crypto/pkcs12/p12_attr.o: crypto/pkcs12/p12_attr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_attr.c
crypto/pkcs12/p12_crpt.o: crypto/pkcs12/p12_crpt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_crpt.c
crypto/pkcs12/p12_crt.o: crypto/pkcs12/p12_crt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_crt.c
crypto/pkcs12/p12_decr.o: crypto/pkcs12/p12_decr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_decr.c
crypto/pkcs12/p12_init.o: crypto/pkcs12/p12_init.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_init.c
crypto/pkcs12/p12_key.o: crypto/pkcs12/p12_key.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_key.c
crypto/pkcs12/p12_kiss.o: crypto/pkcs12/p12_kiss.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_kiss.c
crypto/pkcs12/p12_mutl.o: crypto/pkcs12/p12_mutl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_mutl.c
crypto/pkcs12/p12_npas.o: crypto/pkcs12/p12_npas.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_npas.c
crypto/pkcs12/p12_p8d.o: crypto/pkcs12/p12_p8d.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_p8d.c
crypto/pkcs12/p12_p8e.o: crypto/pkcs12/p12_p8e.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_p8e.c
crypto/pkcs12/p12_sbag.o: crypto/pkcs12/p12_sbag.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_sbag.c
crypto/pkcs12/p12_utl.o: crypto/pkcs12/p12_utl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/p12_utl.c
crypto/pkcs12/pk12err.o: crypto/pkcs12/pk12err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs12/pk12err.c
crypto/pkcs7/bio_pk7.o: crypto/pkcs7/bio_pk7.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs7/bio_pk7.c
crypto/pkcs7/pk7_asn1.o: crypto/pkcs7/pk7_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs7/pk7_asn1.c
crypto/pkcs7/pk7_attr.o: crypto/pkcs7/pk7_attr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs7/pk7_attr.c
crypto/pkcs7/pk7_doit.o: crypto/pkcs7/pk7_doit.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs7/pk7_doit.c
crypto/pkcs7/pk7_lib.o: crypto/pkcs7/pk7_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs7/pk7_lib.c
crypto/pkcs7/pk7_mime.o: crypto/pkcs7/pk7_mime.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs7/pk7_mime.c
crypto/pkcs7/pk7_smime.o: crypto/pkcs7/pk7_smime.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs7/pk7_smime.c
crypto/pkcs7/pkcs7err.o: crypto/pkcs7/pkcs7err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/pkcs7/pkcs7err.c
crypto/poly1305/poly1305.o: crypto/poly1305/poly1305.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/poly1305/poly1305.c
crypto/rand/md_rand.o: crypto/rand/md_rand.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rand/md_rand.c
crypto/rand/rand_egd.o: crypto/rand/rand_egd.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rand/rand_egd.c
crypto/rand/rand_err.o: crypto/rand/rand_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rand/rand_err.c
crypto/rand/rand_lib.o: crypto/rand/rand_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rand/rand_lib.c
crypto/rand/rand_unix.o: crypto/rand/rand_unix.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rand/rand_unix.c
crypto/rand/rand_vms.o: crypto/rand/rand_vms.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rand/rand_vms.c
crypto/rand/rand_win.o: crypto/rand/rand_win.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rand/rand_win.c
crypto/rand/randfile.o: crypto/rand/randfile.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rand/randfile.c
crypto/rc2/rc2_cbc.o: crypto/rc2/rc2_cbc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rc2/rc2_cbc.c
crypto/rc2/rc2_ecb.o: crypto/rc2/rc2_ecb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rc2/rc2_ecb.c
crypto/rc2/rc2_skey.o: crypto/rc2/rc2_skey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rc2/rc2_skey.c
crypto/rc2/rc2cfb64.o: crypto/rc2/rc2cfb64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rc2/rc2cfb64.c
crypto/rc2/rc2ofb64.o: crypto/rc2/rc2ofb64.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rc2/rc2ofb64.c
crypto/rc4/rc4_enc.o: crypto/rc4/rc4_enc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rc4/rc4_enc.c
crypto/rc4/rc4_skey.o: crypto/rc4/rc4_skey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rc4/rc4_skey.c
crypto/ripemd/rmd_dgst.o: crypto/ripemd/rmd_dgst.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ripemd/rmd_dgst.c
crypto/ripemd/rmd_one.o: crypto/ripemd/rmd_one.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ripemd/rmd_one.c
crypto/rsa/rsa_ameth.o: crypto/rsa/rsa_ameth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_ameth.c
crypto/rsa/rsa_asn1.o: crypto/rsa/rsa_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_asn1.c
crypto/rsa/rsa_chk.o: crypto/rsa/rsa_chk.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_chk.c
crypto/rsa/rsa_crpt.o: crypto/rsa/rsa_crpt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_crpt.c
crypto/rsa/rsa_depr.o: crypto/rsa/rsa_depr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_depr.c
crypto/rsa/rsa_err.o: crypto/rsa/rsa_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_err.c
crypto/rsa/rsa_gen.o: crypto/rsa/rsa_gen.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_gen.c
crypto/rsa/rsa_lib.o: crypto/rsa/rsa_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_lib.c
crypto/rsa/rsa_meth.o: crypto/rsa/rsa_meth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_meth.c
crypto/rsa/rsa_none.o: crypto/rsa/rsa_none.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_none.c
crypto/rsa/rsa_null.o: crypto/rsa/rsa_null.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_null.c
crypto/rsa/rsa_oaep.o: crypto/rsa/rsa_oaep.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_oaep.c
crypto/rsa/rsa_ossl.o: crypto/rsa/rsa_ossl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_ossl.c
crypto/rsa/rsa_pk1.o: crypto/rsa/rsa_pk1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_pk1.c
crypto/rsa/rsa_pmeth.o: crypto/rsa/rsa_pmeth.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_pmeth.c
crypto/rsa/rsa_prn.o: crypto/rsa/rsa_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_prn.c
crypto/rsa/rsa_pss.o: crypto/rsa/rsa_pss.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_pss.c
crypto/rsa/rsa_saos.o: crypto/rsa/rsa_saos.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_saos.c
crypto/rsa/rsa_sign.o: crypto/rsa/rsa_sign.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_sign.c
crypto/rsa/rsa_ssl.o: crypto/rsa/rsa_ssl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_ssl.c
crypto/rsa/rsa_x931.o: crypto/rsa/rsa_x931.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_x931.c
crypto/rsa/rsa_x931g.o: crypto/rsa/rsa_x931g.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/rsa/rsa_x931g.c
crypto/seed/seed.o: crypto/seed/seed.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/seed/seed.c
crypto/seed/seed_cbc.o: crypto/seed/seed_cbc.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/seed/seed_cbc.c
crypto/seed/seed_cfb.o: crypto/seed/seed_cfb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/seed/seed_cfb.c
crypto/seed/seed_ecb.o: crypto/seed/seed_ecb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/seed/seed_ecb.c
crypto/seed/seed_ofb.o: crypto/seed/seed_ofb.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/seed/seed_ofb.c
crypto/sha/sha1_one.o: crypto/sha/sha1_one.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/sha/sha1_one.c
crypto/sha/sha1dgst.o: crypto/sha/sha1dgst.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/sha/sha1dgst.c
crypto/sha/sha256.o: crypto/sha/sha256.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/sha/sha256.c
crypto/sha/sha512.o: crypto/sha/sha512.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/sha/sha512.c
crypto/srp/srp_lib.o: crypto/srp/srp_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/srp/srp_lib.c
crypto/srp/srp_vfy.o: crypto/srp/srp_vfy.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/srp/srp_vfy.c
crypto/stack/stack.o: crypto/stack/stack.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/stack/stack.c
crypto/threads_none.o: crypto/threads_none.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/threads_none.c
crypto/threads_pthread.o: crypto/threads_pthread.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/threads_pthread.c
crypto/threads_win.o: crypto/threads_win.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/threads_win.c
crypto/ts/ts_asn1.o: crypto/ts/ts_asn1.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_asn1.c
crypto/ts/ts_conf.o: crypto/ts/ts_conf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_conf.c
crypto/ts/ts_err.o: crypto/ts/ts_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_err.c
crypto/ts/ts_lib.o: crypto/ts/ts_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_lib.c
crypto/ts/ts_req_print.o: crypto/ts/ts_req_print.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_req_print.c
crypto/ts/ts_req_utils.o: crypto/ts/ts_req_utils.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_req_utils.c
crypto/ts/ts_rsp_print.o: crypto/ts/ts_rsp_print.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_rsp_print.c
crypto/ts/ts_rsp_sign.o: crypto/ts/ts_rsp_sign.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_rsp_sign.c
crypto/ts/ts_rsp_utils.o: crypto/ts/ts_rsp_utils.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_rsp_utils.c
crypto/ts/ts_rsp_verify.o: crypto/ts/ts_rsp_verify.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_rsp_verify.c
crypto/ts/ts_verify_ctx.o: crypto/ts/ts_verify_ctx.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ts/ts_verify_ctx.c
crypto/txt_db/txt_db.o: crypto/txt_db/txt_db.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/txt_db/txt_db.c
crypto/ui/ui_err.o: crypto/ui/ui_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ui/ui_err.c
crypto/ui/ui_lib.o: crypto/ui/ui_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ui/ui_lib.c
crypto/ui/ui_openssl.o: crypto/ui/ui_openssl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ui/ui_openssl.c
crypto/ui/ui_util.o: crypto/ui/ui_util.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/ui/ui_util.c
crypto/uid.o: crypto/uid.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/uid.c
crypto/whrlpool/wp_block.o: crypto/whrlpool/wp_block.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/whrlpool/wp_block.c
crypto/whrlpool/wp_dgst.o: crypto/whrlpool/wp_dgst.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/whrlpool/wp_dgst.c
crypto/x509/by_dir.o: crypto/x509/by_dir.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/by_dir.c
crypto/x509/by_file.o: crypto/x509/by_file.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/by_file.c
crypto/x509/t_crl.o: crypto/x509/t_crl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/t_crl.c
crypto/x509/t_req.o: crypto/x509/t_req.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/t_req.c
crypto/x509/t_x509.o: crypto/x509/t_x509.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/t_x509.c
crypto/x509/x509_att.o: crypto/x509/x509_att.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_att.c
crypto/x509/x509_cmp.o: crypto/x509/x509_cmp.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_cmp.c
crypto/x509/x509_d2.o: crypto/x509/x509_d2.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_d2.c
crypto/x509/x509_def.o: crypto/x509/x509_def.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_def.c
crypto/x509/x509_err.o: crypto/x509/x509_err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_err.c
crypto/x509/x509_ext.o: crypto/x509/x509_ext.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_ext.c
crypto/x509/x509_lu.o: crypto/x509/x509_lu.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_lu.c
crypto/x509/x509_obj.o: crypto/x509/x509_obj.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_obj.c
crypto/x509/x509_r2x.o: crypto/x509/x509_r2x.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_r2x.c
crypto/x509/x509_req.o: crypto/x509/x509_req.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_req.c
crypto/x509/x509_set.o: crypto/x509/x509_set.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_set.c
crypto/x509/x509_trs.o: crypto/x509/x509_trs.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_trs.c
crypto/x509/x509_txt.o: crypto/x509/x509_txt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_txt.c
crypto/x509/x509_v3.o: crypto/x509/x509_v3.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_v3.c
crypto/x509/x509_vfy.o: crypto/x509/x509_vfy.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_vfy.c
crypto/x509/x509_vpm.o: crypto/x509/x509_vpm.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509_vpm.c
crypto/x509/x509cset.o: crypto/x509/x509cset.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509cset.c
crypto/x509/x509name.o: crypto/x509/x509name.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509name.c
crypto/x509/x509rset.o: crypto/x509/x509rset.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509rset.c
crypto/x509/x509spki.o: crypto/x509/x509spki.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509spki.c
crypto/x509/x509type.o: crypto/x509/x509type.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x509type.c
crypto/x509/x_all.o: crypto/x509/x_all.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_all.c
crypto/x509/x_attrib.o: crypto/x509/x_attrib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_attrib.c
crypto/x509/x_crl.o: crypto/x509/x_crl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_crl.c
crypto/x509/x_exten.o: crypto/x509/x_exten.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_exten.c
crypto/x509/x_name.o: crypto/x509/x_name.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_name.c
crypto/x509/x_pubkey.o: crypto/x509/x_pubkey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_pubkey.c
crypto/x509/x_req.o: crypto/x509/x_req.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_req.c
crypto/x509/x_x509.o: crypto/x509/x_x509.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_x509.c
crypto/x509/x_x509a.o: crypto/x509/x_x509a.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509/x_x509a.c
crypto/x509v3/pcy_cache.o: crypto/x509v3/pcy_cache.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/pcy_cache.c
crypto/x509v3/pcy_data.o: crypto/x509v3/pcy_data.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/pcy_data.c
crypto/x509v3/pcy_lib.o: crypto/x509v3/pcy_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/pcy_lib.c
crypto/x509v3/pcy_map.o: crypto/x509v3/pcy_map.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/pcy_map.c
crypto/x509v3/pcy_node.o: crypto/x509v3/pcy_node.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/pcy_node.c
crypto/x509v3/pcy_tree.o: crypto/x509v3/pcy_tree.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/pcy_tree.c
crypto/x509v3/v3_addr.o: crypto/x509v3/v3_addr.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_addr.c
crypto/x509v3/v3_akey.o: crypto/x509v3/v3_akey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_akey.c
crypto/x509v3/v3_akeya.o: crypto/x509v3/v3_akeya.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_akeya.c
crypto/x509v3/v3_alt.o: crypto/x509v3/v3_alt.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_alt.c
crypto/x509v3/v3_asid.o: crypto/x509v3/v3_asid.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_asid.c
crypto/x509v3/v3_bcons.o: crypto/x509v3/v3_bcons.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_bcons.c
crypto/x509v3/v3_bitst.o: crypto/x509v3/v3_bitst.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_bitst.c
crypto/x509v3/v3_conf.o: crypto/x509v3/v3_conf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_conf.c
crypto/x509v3/v3_cpols.o: crypto/x509v3/v3_cpols.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_cpols.c
crypto/x509v3/v3_crld.o: crypto/x509v3/v3_crld.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_crld.c
crypto/x509v3/v3_enum.o: crypto/x509v3/v3_enum.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_enum.c
crypto/x509v3/v3_extku.o: crypto/x509v3/v3_extku.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_extku.c
crypto/x509v3/v3_genn.o: crypto/x509v3/v3_genn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_genn.c
crypto/x509v3/v3_ia5.o: crypto/x509v3/v3_ia5.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_ia5.c
crypto/x509v3/v3_info.o: crypto/x509v3/v3_info.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_info.c
crypto/x509v3/v3_int.o: crypto/x509v3/v3_int.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_int.c
crypto/x509v3/v3_lib.o: crypto/x509v3/v3_lib.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_lib.c
crypto/x509v3/v3_ncons.o: crypto/x509v3/v3_ncons.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_ncons.c
crypto/x509v3/v3_pci.o: crypto/x509v3/v3_pci.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_pci.c
crypto/x509v3/v3_pcia.o: crypto/x509v3/v3_pcia.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_pcia.c
crypto/x509v3/v3_pcons.o: crypto/x509v3/v3_pcons.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_pcons.c
crypto/x509v3/v3_pku.o: crypto/x509v3/v3_pku.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_pku.c
crypto/x509v3/v3_pmaps.o: crypto/x509v3/v3_pmaps.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_pmaps.c
crypto/x509v3/v3_prn.o: crypto/x509v3/v3_prn.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_prn.c
crypto/x509v3/v3_purp.o: crypto/x509v3/v3_purp.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_purp.c
crypto/x509v3/v3_skey.o: crypto/x509v3/v3_skey.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_skey.c
crypto/x509v3/v3_sxnet.o: crypto/x509v3/v3_sxnet.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_sxnet.c
crypto/x509v3/v3_tlsf.o: crypto/x509v3/v3_tlsf.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_tlsf.c
crypto/x509v3/v3_utl.o: crypto/x509v3/v3_utl.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3_utl.c
crypto/x509v3/v3err.o: crypto/x509v3/v3err.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ crypto/x509v3/v3err.c
# With a build on a Windows POSIX layer (Cygwin or Mingw), we know for a fact
# that two files get produced, {shlibname}.dll and {libname}.dll.a.
# With all other Unix platforms, we often build a shared library with the
# SO version built into the file name and a symlink without the SO version
# It's not necessary to have both as targets.  The choice falls on the
# simplest, {libname} for Windows POSIX layers and
# {libname}.so for the Unix platforms.
libssl.so: libssl.a libcrypto.so util/libssl.num
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PLATFORM=$(PLATFORM) \
		PERL="$(PERL)" SRCDIR='$(SRCDIR)' DSTDIR="." \
		INSTALLTOP='$(INSTALLTOP)' LIBDIR='$(LIBDIR)' \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		LIBNAME=ssl LIBVERSION=$(SHLIB_MAJOR).$(SHLIB_MINOR) \
		LIBCOMPATVERSIONS=';$(SHLIB_VERSION_HISTORY)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(LIB_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		SHARED_LDFLAGS='$(LIB_LDFLAGS)' SHLIB_EXT=.so.$(SHLIB_MAJOR).$(SHLIB_MINOR) \
		RC='$(RC)' SHARED_RCFLAGS='$(RCFLAGS)' \
		link_shlib.linux-shared
libssl.a: ssl/bio_ssl.o ssl/d1_lib.o ssl/d1_msg.o ssl/d1_srtp.o ssl/methods.o ssl/pqueue.o ssl/record/dtls1_bitmap.o ssl/record/rec_layer_d1.o ssl/record/rec_layer_s3.o ssl/record/ssl3_buffer.o ssl/record/ssl3_record.o ssl/s3_cbc.o ssl/s3_enc.o ssl/s3_lib.o ssl/s3_msg.o ssl/ssl_asn1.o ssl/ssl_cert.o ssl/ssl_ciph.o ssl/ssl_conf.o ssl/ssl_err.o ssl/ssl_init.o ssl/ssl_lib.o ssl/ssl_mcnf.o ssl/ssl_rsa.o ssl/ssl_sess.o ssl/ssl_stat.o ssl/ssl_txt.o ssl/ssl_utst.o ssl/statem/statem.o ssl/statem/statem_clnt.o ssl/statem/statem_dtls.o ssl/statem/statem_lib.o ssl/statem/statem_srvr.o ssl/t1_enc.o ssl/t1_ext.o ssl/t1_lib.o ssl/t1_reneg.o ssl/t1_trce.o ssl/tls_srp.o
	$(AR) $@ $?
	$(RANLIB) $@ || echo Never mind.
ssl/bio_ssl.o: ssl/bio_ssl.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/bio_ssl.c
ssl/d1_lib.o: ssl/d1_lib.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/d1_lib.c
ssl/d1_msg.o: ssl/d1_msg.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/d1_msg.c
ssl/d1_srtp.o: ssl/d1_srtp.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/d1_srtp.c
ssl/methods.o: ssl/methods.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/methods.c
ssl/pqueue.o: ssl/pqueue.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/pqueue.c
ssl/record/dtls1_bitmap.o: ssl/record/dtls1_bitmap.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/record/dtls1_bitmap.c
ssl/record/rec_layer_d1.o: ssl/record/rec_layer_d1.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/record/rec_layer_d1.c
ssl/record/rec_layer_s3.o: ssl/record/rec_layer_s3.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/record/rec_layer_s3.c
ssl/record/ssl3_buffer.o: ssl/record/ssl3_buffer.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/record/ssl3_buffer.c
ssl/record/ssl3_record.o: ssl/record/ssl3_record.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/record/ssl3_record.c
ssl/s3_cbc.o: ssl/s3_cbc.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/s3_cbc.c
ssl/s3_enc.o: ssl/s3_enc.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/s3_enc.c
ssl/s3_lib.o: ssl/s3_lib.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/s3_lib.c
ssl/s3_msg.o: ssl/s3_msg.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/s3_msg.c
ssl/ssl_asn1.o: ssl/ssl_asn1.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_asn1.c
ssl/ssl_cert.o: ssl/ssl_cert.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_cert.c
ssl/ssl_ciph.o: ssl/ssl_ciph.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_ciph.c
ssl/ssl_conf.o: ssl/ssl_conf.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_conf.c
ssl/ssl_err.o: ssl/ssl_err.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_err.c
ssl/ssl_init.o: ssl/ssl_init.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_init.c
ssl/ssl_lib.o: ssl/ssl_lib.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_lib.c
ssl/ssl_mcnf.o: ssl/ssl_mcnf.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_mcnf.c
ssl/ssl_rsa.o: ssl/ssl_rsa.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_rsa.c
ssl/ssl_sess.o: ssl/ssl_sess.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_sess.c
ssl/ssl_stat.o: ssl/ssl_stat.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_stat.c
ssl/ssl_txt.o: ssl/ssl_txt.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_txt.c
ssl/ssl_utst.o: ssl/ssl_utst.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/ssl_utst.c
ssl/statem/statem.o: ssl/statem/statem.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/statem/statem.c
ssl/statem/statem_clnt.o: ssl/statem/statem_clnt.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/statem/statem_clnt.c
ssl/statem/statem_dtls.o: ssl/statem/statem_dtls.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/statem/statem_dtls.c
ssl/statem/statem_lib.o: ssl/statem/statem_lib.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/statem/statem_lib.c
ssl/statem/statem_srvr.o: ssl/statem/statem_srvr.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/statem/statem_srvr.c
ssl/t1_enc.o: ssl/t1_enc.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/t1_enc.c
ssl/t1_ext.o: ssl/t1_ext.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/t1_ext.c
ssl/t1_lib.o: ssl/t1_lib.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/t1_lib.c
ssl/t1_reneg.o: ssl/t1_reneg.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/t1_reneg.c
ssl/t1_trce.o: ssl/t1_trce.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/t1_trce.c
ssl/tls_srp.o: ssl/tls_srp.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(LIB_CFLAGS) -c -o $@ ssl/tls_srp.c
engines/capi.so: engines/e_capi.o libcrypto.so
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PLATFORM=$(PLATFORM) \
		PERL="$(PERL)" SRCDIR='$(SRCDIR)' DSTDIR="engines" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		LIBNAME=capi LDFLAGS='$(LDFLAGS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(DSO_CFLAGS)' \
		SHARED_LDFLAGS='$(DSO_LDFLAGS)' \
		SHLIB_EXT=.so \
		LIBEXTRAS="engines/e_capi.o" \
		link_dso.linux-shared
engines/e_capi.o: engines/e_capi.c
	$(CC)  -Iinclude $(CFLAGS) $(DSO_CFLAGS) -c -o $@ engines/e_capi.c
engines/dasync.so: engines/e_dasync.o libcrypto.so
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PLATFORM=$(PLATFORM) \
		PERL="$(PERL)" SRCDIR='$(SRCDIR)' DSTDIR="engines" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		LIBNAME=dasync LDFLAGS='$(LDFLAGS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(DSO_CFLAGS)' \
		SHARED_LDFLAGS='$(DSO_LDFLAGS)' \
		SHLIB_EXT=.so \
		LIBEXTRAS="engines/e_dasync.o" \
		link_dso.linux-shared
engines/e_dasync.o: engines/e_dasync.c
	$(CC)  -Iinclude $(CFLAGS) $(DSO_CFLAGS) -c -o $@ engines/e_dasync.c
engines/ossltest.so: engines/e_ossltest.o libcrypto.so
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PLATFORM=$(PLATFORM) \
		PERL="$(PERL)" SRCDIR='$(SRCDIR)' DSTDIR="engines" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		LIBNAME=ossltest LDFLAGS='$(LDFLAGS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(DSO_CFLAGS)' \
		SHARED_LDFLAGS='$(DSO_LDFLAGS)' \
		SHLIB_EXT=.so \
		LIBEXTRAS="engines/e_ossltest.o" \
		link_dso.linux-shared
engines/e_ossltest.o: engines/e_ossltest.c
	$(CC)  -Iinclude $(CFLAGS) $(DSO_CFLAGS) -c -o $@ engines/e_ossltest.c
engines/padlock.so: engines/e_padlock.o libcrypto.so
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PLATFORM=$(PLATFORM) \
		PERL="$(PERL)" SRCDIR='$(SRCDIR)' DSTDIR="engines" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		LIBNAME=padlock LDFLAGS='$(LDFLAGS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(DSO_CFLAGS)' \
		SHARED_LDFLAGS='$(DSO_LDFLAGS)' \
		SHLIB_EXT=.so \
		LIBEXTRAS="engines/e_padlock.o" \
		link_dso.linux-shared
engines/e_padlock.o: engines/e_padlock.c
	$(CC)  -Iinclude $(CFLAGS) $(DSO_CFLAGS) -c -o $@ engines/e_padlock.c
apps/openssl: apps/app_rand.o apps/apps.o apps/asn1pars.o apps/ca.o apps/ciphers.o apps/cms.o apps/crl.o apps/crl2p7.o apps/dgst.o apps/dhparam.o apps/dsa.o apps/dsaparam.o apps/ec.o apps/ecparam.o apps/enc.o apps/engine.o apps/errstr.o apps/gendsa.o apps/genpkey.o apps/genrsa.o apps/nseq.o apps/ocsp.o apps/openssl.o apps/opt.o apps/passwd.o apps/pkcs12.o apps/pkcs7.o apps/pkcs8.o apps/pkey.o apps/pkeyparam.o apps/pkeyutl.o apps/prime.o apps/rand.o apps/rehash.o apps/req.o apps/rsa.o apps/rsautl.o apps/s_cb.o apps/s_client.o apps/s_server.o apps/s_socket.o apps/s_time.o apps/sess_id.o apps/smime.o apps/speed.o apps/spkac.o apps/srp.o apps/ts.o apps/verify.o apps/version.o apps/x509.o libssl.so libcrypto.so
	$(RM) apps/openssl
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=apps/openssl OBJECTS="apps/app_rand.o apps/apps.o apps/asn1pars.o apps/ca.o apps/ciphers.o apps/cms.o apps/crl.o apps/crl2p7.o apps/dgst.o apps/dhparam.o apps/dsa.o apps/dsaparam.o apps/ec.o apps/ecparam.o apps/enc.o apps/engine.o apps/errstr.o apps/gendsa.o apps/genpkey.o apps/genrsa.o apps/nseq.o apps/ocsp.o apps/openssl.o apps/opt.o apps/passwd.o apps/pkcs12.o apps/pkcs7.o apps/pkcs8.o apps/pkey.o apps/pkeyparam.o apps/pkeyutl.o apps/prime.o apps/rand.o apps/rehash.o apps/req.o apps/rsa.o apps/rsautl.o apps/s_cb.o apps/s_client.o apps/s_server.o apps/s_socket.o apps/s_time.o apps/sess_id.o apps/smime.o apps/speed.o apps/spkac.o apps/srp.o apps/ts.o apps/verify.o apps/version.o apps/x509.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
apps/app_rand.o: apps/app_rand.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/app_rand.c
apps/apps.o: apps/apps.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/apps.c
apps/asn1pars.o: apps/asn1pars.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/asn1pars.c
apps/ca.o: apps/ca.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/ca.c
apps/ciphers.o: apps/ciphers.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/ciphers.c
apps/cms.o: apps/cms.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/cms.c
apps/crl.o: apps/crl.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/crl.c
apps/crl2p7.o: apps/crl2p7.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/crl2p7.c
apps/dgst.o: apps/dgst.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/dgst.c
apps/dhparam.o: apps/dhparam.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/dhparam.c
apps/dsa.o: apps/dsa.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/dsa.c
apps/dsaparam.o: apps/dsaparam.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/dsaparam.c
apps/ec.o: apps/ec.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/ec.c
apps/ecparam.o: apps/ecparam.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/ecparam.c
apps/enc.o: apps/enc.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/enc.c
apps/engine.o: apps/engine.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/engine.c
apps/errstr.o: apps/errstr.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/errstr.c
apps/gendsa.o: apps/gendsa.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/gendsa.c
apps/genpkey.o: apps/genpkey.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/genpkey.c
apps/genrsa.o: apps/genrsa.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/genrsa.c
apps/nseq.o: apps/nseq.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/nseq.c
apps/ocsp.o: apps/ocsp.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/ocsp.c
apps/openssl.o: apps/openssl.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/openssl.c
apps/opt.o: apps/opt.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/opt.c
apps/passwd.o: apps/passwd.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/passwd.c
apps/pkcs12.o: apps/pkcs12.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/pkcs12.c
apps/pkcs7.o: apps/pkcs7.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/pkcs7.c
apps/pkcs8.o: apps/pkcs8.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/pkcs8.c
apps/pkey.o: apps/pkey.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/pkey.c
apps/pkeyparam.o: apps/pkeyparam.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/pkeyparam.c
apps/pkeyutl.o: apps/pkeyutl.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/pkeyutl.c
apps/prime.o: apps/prime.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/prime.c
apps/rand.o: apps/rand.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/rand.c
apps/rehash.o: apps/rehash.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/rehash.c
apps/req.o: apps/req.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/req.c
apps/rsa.o: apps/rsa.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/rsa.c
apps/rsautl.o: apps/rsautl.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/rsautl.c
apps/s_cb.o: apps/s_cb.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/s_cb.c
apps/s_client.o: apps/s_client.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/s_client.c
apps/s_server.o: apps/s_server.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/s_server.c
apps/s_socket.o: apps/s_socket.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/s_socket.c
apps/s_time.o: apps/s_time.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/s_time.c
apps/sess_id.o: apps/sess_id.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/sess_id.c
apps/smime.o: apps/smime.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/smime.c
apps/speed.o: apps/speed.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/speed.c
apps/spkac.o: apps/spkac.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/spkac.c
apps/srp.o: apps/srp.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/srp.c
apps/ts.o: apps/ts.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/ts.c
apps/verify.o: apps/verify.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/verify.c
apps/version.o: apps/version.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/version.c
apps/x509.o: apps/x509.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ apps/x509.c
fuzz/asn1-test: fuzz/asn1.o fuzz/test-corpus.o libcrypto.so
	$(RM) fuzz/asn1-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/asn1-test OBJECTS="fuzz/asn1.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/asn1.o: fuzz/asn1.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/asn1.c
fuzz/test-corpus.o: fuzz/test-corpus.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/test-corpus.c
fuzz/asn1parse-test: fuzz/asn1parse.o fuzz/test-corpus.o libcrypto.so
	$(RM) fuzz/asn1parse-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/asn1parse-test OBJECTS="fuzz/asn1parse.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/asn1parse.o: fuzz/asn1parse.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/asn1parse.c
fuzz/bignum-test: fuzz/bignum.o fuzz/test-corpus.o libcrypto.so
	$(RM) fuzz/bignum-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/bignum-test OBJECTS="fuzz/bignum.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/bignum.o: fuzz/bignum.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/bignum.c
fuzz/bndiv-test: fuzz/bndiv.o fuzz/test-corpus.o libcrypto.so
	$(RM) fuzz/bndiv-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/bndiv-test OBJECTS="fuzz/bndiv.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/bndiv.o: fuzz/bndiv.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/bndiv.c
fuzz/cms-test: fuzz/cms.o fuzz/test-corpus.o libcrypto.so
	$(RM) fuzz/cms-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/cms-test OBJECTS="fuzz/cms.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/cms.o: fuzz/cms.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/cms.c
fuzz/conf-test: fuzz/conf.o fuzz/test-corpus.o libcrypto.so
	$(RM) fuzz/conf-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/conf-test OBJECTS="fuzz/conf.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/conf.o: fuzz/conf.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/conf.c
fuzz/crl-test: fuzz/crl.o fuzz/test-corpus.o libcrypto.so
	$(RM) fuzz/crl-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/crl-test OBJECTS="fuzz/crl.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/crl.o: fuzz/crl.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/crl.c
fuzz/ct-test: fuzz/ct.o fuzz/test-corpus.o libcrypto.so
	$(RM) fuzz/ct-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/ct-test OBJECTS="fuzz/ct.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/ct.o: fuzz/ct.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/ct.c
fuzz/server-test: fuzz/server.o fuzz/test-corpus.o libssl.so libcrypto.so
	$(RM) fuzz/server-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/server-test OBJECTS="fuzz/server.o fuzz/test-corpus.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/server.o: fuzz/server.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/server.c
fuzz/x509-test: fuzz/test-corpus.o fuzz/x509.o libcrypto.so
	$(RM) fuzz/x509-test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=fuzz/x509-test OBJECTS="fuzz/test-corpus.o fuzz/x509.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
fuzz/x509.o: fuzz/x509.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ fuzz/x509.c
test/aborttest: test/aborttest.o libcrypto.so
	$(RM) test/aborttest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/aborttest OBJECTS="test/aborttest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/aborttest.o: test/aborttest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/aborttest.c
test/afalgtest: test/afalgtest.o libcrypto.so
	$(RM) test/afalgtest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/afalgtest OBJECTS="test/afalgtest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/afalgtest.o: test/afalgtest.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/afalgtest.c
test/asynciotest: test/asynciotest.o test/ssltestlib.o libssl.so libcrypto.so
	$(RM) test/asynciotest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/asynciotest OBJECTS="test/asynciotest.o test/ssltestlib.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/asynciotest.o: test/asynciotest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/asynciotest.c
test/ssltestlib.o: test/ssltestlib.c
	$(CC)  -Iinclude -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ssltestlib.c
test/asynctest: test/asynctest.o libcrypto.so
	$(RM) test/asynctest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/asynctest OBJECTS="test/asynctest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/asynctest.o: test/asynctest.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/asynctest.c
test/bad_dtls_test: test/bad_dtls_test.o libssl.so libcrypto.so
	$(RM) test/bad_dtls_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/bad_dtls_test OBJECTS="test/bad_dtls_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/bad_dtls_test.o: test/bad_dtls_test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/bad_dtls_test.c
test/bftest: test/bftest.o libcrypto.so
	$(RM) test/bftest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/bftest OBJECTS="test/bftest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/bftest.o: test/bftest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/bftest.c
test/bio_enc_test: test/bio_enc_test.o libcrypto.so
	$(RM) test/bio_enc_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/bio_enc_test OBJECTS="test/bio_enc_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/bio_enc_test.o: test/bio_enc_test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/bio_enc_test.c
test/bioprinttest: test/bioprinttest.o libcrypto.so
	$(RM) test/bioprinttest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/bioprinttest OBJECTS="test/bioprinttest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/bioprinttest.o: test/bioprinttest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/bioprinttest.c
test/bntest: test/bntest.o libcrypto.so
	$(RM) test/bntest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/bntest OBJECTS="test/bntest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/bntest.o: test/bntest.c
	$(CC)  -I. -Icrypto/include -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/bntest.c
test/buildtest_aes: test/buildtest_aes.o libssl.so libcrypto.so
	$(RM) test/buildtest_aes
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_aes OBJECTS="test/buildtest_aes.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_aes.o: test/buildtest_aes.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_aes.c
test/buildtest_aes.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl aes > $@
test/buildtest_asn1: test/buildtest_asn1.o libssl.so libcrypto.so
	$(RM) test/buildtest_asn1
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_asn1 OBJECTS="test/buildtest_asn1.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_asn1.o: test/buildtest_asn1.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_asn1.c
test/buildtest_asn1.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl asn1 > $@
test/buildtest_asn1t: test/buildtest_asn1t.o libssl.so libcrypto.so
	$(RM) test/buildtest_asn1t
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_asn1t OBJECTS="test/buildtest_asn1t.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_asn1t.o: test/buildtest_asn1t.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_asn1t.c
test/buildtest_asn1t.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl asn1t > $@
test/buildtest_async: test/buildtest_async.o libssl.so libcrypto.so
	$(RM) test/buildtest_async
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_async OBJECTS="test/buildtest_async.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_async.o: test/buildtest_async.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_async.c
test/buildtest_async.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl async > $@
test/buildtest_bio: test/buildtest_bio.o libssl.so libcrypto.so
	$(RM) test/buildtest_bio
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_bio OBJECTS="test/buildtest_bio.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_bio.o: test/buildtest_bio.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_bio.c
test/buildtest_bio.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl bio > $@
test/buildtest_blowfish: test/buildtest_blowfish.o libssl.so libcrypto.so
	$(RM) test/buildtest_blowfish
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_blowfish OBJECTS="test/buildtest_blowfish.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_blowfish.o: test/buildtest_blowfish.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_blowfish.c
test/buildtest_blowfish.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl blowfish > $@
test/buildtest_bn: test/buildtest_bn.o libssl.so libcrypto.so
	$(RM) test/buildtest_bn
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_bn OBJECTS="test/buildtest_bn.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_bn.o: test/buildtest_bn.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_bn.c
test/buildtest_bn.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl bn > $@
test/buildtest_buffer: test/buildtest_buffer.o libssl.so libcrypto.so
	$(RM) test/buildtest_buffer
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_buffer OBJECTS="test/buildtest_buffer.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_buffer.o: test/buildtest_buffer.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_buffer.c
test/buildtest_buffer.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl buffer > $@
test/buildtest_camellia: test/buildtest_camellia.o libssl.so libcrypto.so
	$(RM) test/buildtest_camellia
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_camellia OBJECTS="test/buildtest_camellia.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_camellia.o: test/buildtest_camellia.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_camellia.c
test/buildtest_camellia.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl camellia > $@
test/buildtest_cast: test/buildtest_cast.o libssl.so libcrypto.so
	$(RM) test/buildtest_cast
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_cast OBJECTS="test/buildtest_cast.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_cast.o: test/buildtest_cast.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_cast.c
test/buildtest_cast.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl cast > $@
test/buildtest_cmac: test/buildtest_cmac.o libssl.so libcrypto.so
	$(RM) test/buildtest_cmac
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_cmac OBJECTS="test/buildtest_cmac.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_cmac.o: test/buildtest_cmac.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_cmac.c
test/buildtest_cmac.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl cmac > $@
test/buildtest_cms: test/buildtest_cms.o libssl.so libcrypto.so
	$(RM) test/buildtest_cms
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_cms OBJECTS="test/buildtest_cms.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_cms.o: test/buildtest_cms.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_cms.c
test/buildtest_cms.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl cms > $@
test/buildtest_comp: test/buildtest_comp.o libssl.so libcrypto.so
	$(RM) test/buildtest_comp
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_comp OBJECTS="test/buildtest_comp.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_comp.o: test/buildtest_comp.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_comp.c
test/buildtest_comp.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl comp > $@
test/buildtest_conf: test/buildtest_conf.o libssl.so libcrypto.so
	$(RM) test/buildtest_conf
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_conf OBJECTS="test/buildtest_conf.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_conf.o: test/buildtest_conf.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_conf.c
test/buildtest_conf.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl conf > $@
test/buildtest_conf_api: test/buildtest_conf_api.o libssl.so libcrypto.so
	$(RM) test/buildtest_conf_api
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_conf_api OBJECTS="test/buildtest_conf_api.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_conf_api.o: test/buildtest_conf_api.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_conf_api.c
test/buildtest_conf_api.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl conf_api > $@
test/buildtest_crypto: test/buildtest_crypto.o libssl.so libcrypto.so
	$(RM) test/buildtest_crypto
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_crypto OBJECTS="test/buildtest_crypto.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_crypto.o: test/buildtest_crypto.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_crypto.c
test/buildtest_crypto.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl crypto > $@
test/buildtest_ct: test/buildtest_ct.o libssl.so libcrypto.so
	$(RM) test/buildtest_ct
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ct OBJECTS="test/buildtest_ct.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ct.o: test/buildtest_ct.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ct.c
test/buildtest_ct.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ct > $@
test/buildtest_des: test/buildtest_des.o libssl.so libcrypto.so
	$(RM) test/buildtest_des
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_des OBJECTS="test/buildtest_des.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_des.o: test/buildtest_des.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_des.c
test/buildtest_des.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl des > $@
test/buildtest_dh: test/buildtest_dh.o libssl.so libcrypto.so
	$(RM) test/buildtest_dh
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_dh OBJECTS="test/buildtest_dh.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_dh.o: test/buildtest_dh.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_dh.c
test/buildtest_dh.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl dh > $@
test/buildtest_dsa: test/buildtest_dsa.o libssl.so libcrypto.so
	$(RM) test/buildtest_dsa
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_dsa OBJECTS="test/buildtest_dsa.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_dsa.o: test/buildtest_dsa.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_dsa.c
test/buildtest_dsa.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl dsa > $@
test/buildtest_dtls1: test/buildtest_dtls1.o libssl.so libcrypto.so
	$(RM) test/buildtest_dtls1
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_dtls1 OBJECTS="test/buildtest_dtls1.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_dtls1.o: test/buildtest_dtls1.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_dtls1.c
test/buildtest_dtls1.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl dtls1 > $@
test/buildtest_e_os2: test/buildtest_e_os2.o libssl.so libcrypto.so
	$(RM) test/buildtest_e_os2
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_e_os2 OBJECTS="test/buildtest_e_os2.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_e_os2.o: test/buildtest_e_os2.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_e_os2.c
test/buildtest_e_os2.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl e_os2 > $@
test/buildtest_ebcdic: test/buildtest_ebcdic.o libssl.so libcrypto.so
	$(RM) test/buildtest_ebcdic
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ebcdic OBJECTS="test/buildtest_ebcdic.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ebcdic.o: test/buildtest_ebcdic.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ebcdic.c
test/buildtest_ebcdic.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ebcdic > $@
test/buildtest_ec: test/buildtest_ec.o libssl.so libcrypto.so
	$(RM) test/buildtest_ec
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ec OBJECTS="test/buildtest_ec.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ec.o: test/buildtest_ec.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ec.c
test/buildtest_ec.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ec > $@
test/buildtest_ecdh: test/buildtest_ecdh.o libssl.so libcrypto.so
	$(RM) test/buildtest_ecdh
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ecdh OBJECTS="test/buildtest_ecdh.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ecdh.o: test/buildtest_ecdh.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ecdh.c
test/buildtest_ecdh.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ecdh > $@
test/buildtest_ecdsa: test/buildtest_ecdsa.o libssl.so libcrypto.so
	$(RM) test/buildtest_ecdsa
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ecdsa OBJECTS="test/buildtest_ecdsa.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ecdsa.o: test/buildtest_ecdsa.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ecdsa.c
test/buildtest_ecdsa.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ecdsa > $@
test/buildtest_engine: test/buildtest_engine.o libssl.so libcrypto.so
	$(RM) test/buildtest_engine
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_engine OBJECTS="test/buildtest_engine.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_engine.o: test/buildtest_engine.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_engine.c
test/buildtest_engine.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl engine > $@
test/buildtest_err: test/buildtest_err.o libssl.so libcrypto.so
	$(RM) test/buildtest_err
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_err OBJECTS="test/buildtest_err.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_err.o: test/buildtest_err.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_err.c
test/buildtest_err.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl err > $@
test/buildtest_evp: test/buildtest_evp.o libssl.so libcrypto.so
	$(RM) test/buildtest_evp
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_evp OBJECTS="test/buildtest_evp.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_evp.o: test/buildtest_evp.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_evp.c
test/buildtest_evp.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl evp > $@
test/buildtest_hmac: test/buildtest_hmac.o libssl.so libcrypto.so
	$(RM) test/buildtest_hmac
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_hmac OBJECTS="test/buildtest_hmac.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_hmac.o: test/buildtest_hmac.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_hmac.c
test/buildtest_hmac.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl hmac > $@
test/buildtest_idea: test/buildtest_idea.o libssl.so libcrypto.so
	$(RM) test/buildtest_idea
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_idea OBJECTS="test/buildtest_idea.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_idea.o: test/buildtest_idea.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_idea.c
test/buildtest_idea.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl idea > $@
test/buildtest_kdf: test/buildtest_kdf.o libssl.so libcrypto.so
	$(RM) test/buildtest_kdf
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_kdf OBJECTS="test/buildtest_kdf.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_kdf.o: test/buildtest_kdf.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_kdf.c
test/buildtest_kdf.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl kdf > $@
test/buildtest_lhash: test/buildtest_lhash.o libssl.so libcrypto.so
	$(RM) test/buildtest_lhash
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_lhash OBJECTS="test/buildtest_lhash.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_lhash.o: test/buildtest_lhash.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_lhash.c
test/buildtest_lhash.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl lhash > $@
test/buildtest_md4: test/buildtest_md4.o libssl.so libcrypto.so
	$(RM) test/buildtest_md4
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_md4 OBJECTS="test/buildtest_md4.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_md4.o: test/buildtest_md4.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_md4.c
test/buildtest_md4.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl md4 > $@
test/buildtest_md5: test/buildtest_md5.o libssl.so libcrypto.so
	$(RM) test/buildtest_md5
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_md5 OBJECTS="test/buildtest_md5.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_md5.o: test/buildtest_md5.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_md5.c
test/buildtest_md5.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl md5 > $@
test/buildtest_mdc2: test/buildtest_mdc2.o libssl.so libcrypto.so
	$(RM) test/buildtest_mdc2
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_mdc2 OBJECTS="test/buildtest_mdc2.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_mdc2.o: test/buildtest_mdc2.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_mdc2.c
test/buildtest_mdc2.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl mdc2 > $@
test/buildtest_modes: test/buildtest_modes.o libssl.so libcrypto.so
	$(RM) test/buildtest_modes
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_modes OBJECTS="test/buildtest_modes.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_modes.o: test/buildtest_modes.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_modes.c
test/buildtest_modes.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl modes > $@
test/buildtest_obj_mac: test/buildtest_obj_mac.o libssl.so libcrypto.so
	$(RM) test/buildtest_obj_mac
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_obj_mac OBJECTS="test/buildtest_obj_mac.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_obj_mac.o: test/buildtest_obj_mac.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_obj_mac.c
test/buildtest_obj_mac.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl obj_mac > $@
test/buildtest_objects: test/buildtest_objects.o libssl.so libcrypto.so
	$(RM) test/buildtest_objects
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_objects OBJECTS="test/buildtest_objects.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_objects.o: test/buildtest_objects.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_objects.c
test/buildtest_objects.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl objects > $@
test/buildtest_ocsp: test/buildtest_ocsp.o libssl.so libcrypto.so
	$(RM) test/buildtest_ocsp
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ocsp OBJECTS="test/buildtest_ocsp.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ocsp.o: test/buildtest_ocsp.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ocsp.c
test/buildtest_ocsp.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ocsp > $@
test/buildtest_opensslv: test/buildtest_opensslv.o libssl.so libcrypto.so
	$(RM) test/buildtest_opensslv
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_opensslv OBJECTS="test/buildtest_opensslv.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_opensslv.o: test/buildtest_opensslv.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_opensslv.c
test/buildtest_opensslv.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl opensslv > $@
test/buildtest_ossl_typ: test/buildtest_ossl_typ.o libssl.so libcrypto.so
	$(RM) test/buildtest_ossl_typ
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ossl_typ OBJECTS="test/buildtest_ossl_typ.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ossl_typ.o: test/buildtest_ossl_typ.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ossl_typ.c
test/buildtest_ossl_typ.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ossl_typ > $@
test/buildtest_pem: test/buildtest_pem.o libssl.so libcrypto.so
	$(RM) test/buildtest_pem
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_pem OBJECTS="test/buildtest_pem.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_pem.o: test/buildtest_pem.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_pem.c
test/buildtest_pem.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl pem > $@
test/buildtest_pem2: test/buildtest_pem2.o libssl.so libcrypto.so
	$(RM) test/buildtest_pem2
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_pem2 OBJECTS="test/buildtest_pem2.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_pem2.o: test/buildtest_pem2.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_pem2.c
test/buildtest_pem2.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl pem2 > $@
test/buildtest_pkcs12: test/buildtest_pkcs12.o libssl.so libcrypto.so
	$(RM) test/buildtest_pkcs12
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_pkcs12 OBJECTS="test/buildtest_pkcs12.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_pkcs12.o: test/buildtest_pkcs12.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_pkcs12.c
test/buildtest_pkcs12.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl pkcs12 > $@
test/buildtest_pkcs7: test/buildtest_pkcs7.o libssl.so libcrypto.so
	$(RM) test/buildtest_pkcs7
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_pkcs7 OBJECTS="test/buildtest_pkcs7.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_pkcs7.o: test/buildtest_pkcs7.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_pkcs7.c
test/buildtest_pkcs7.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl pkcs7 > $@
test/buildtest_rand: test/buildtest_rand.o libssl.so libcrypto.so
	$(RM) test/buildtest_rand
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_rand OBJECTS="test/buildtest_rand.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_rand.o: test/buildtest_rand.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_rand.c
test/buildtest_rand.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl rand > $@
test/buildtest_rc2: test/buildtest_rc2.o libssl.so libcrypto.so
	$(RM) test/buildtest_rc2
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_rc2 OBJECTS="test/buildtest_rc2.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_rc2.o: test/buildtest_rc2.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_rc2.c
test/buildtest_rc2.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl rc2 > $@
test/buildtest_rc4: test/buildtest_rc4.o libssl.so libcrypto.so
	$(RM) test/buildtest_rc4
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_rc4 OBJECTS="test/buildtest_rc4.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_rc4.o: test/buildtest_rc4.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_rc4.c
test/buildtest_rc4.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl rc4 > $@
test/buildtest_ripemd: test/buildtest_ripemd.o libssl.so libcrypto.so
	$(RM) test/buildtest_ripemd
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ripemd OBJECTS="test/buildtest_ripemd.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ripemd.o: test/buildtest_ripemd.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ripemd.c
test/buildtest_ripemd.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ripemd > $@
test/buildtest_rsa: test/buildtest_rsa.o libssl.so libcrypto.so
	$(RM) test/buildtest_rsa
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_rsa OBJECTS="test/buildtest_rsa.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_rsa.o: test/buildtest_rsa.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_rsa.c
test/buildtest_rsa.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl rsa > $@
test/buildtest_safestack: test/buildtest_safestack.o libssl.so libcrypto.so
	$(RM) test/buildtest_safestack
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_safestack OBJECTS="test/buildtest_safestack.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_safestack.o: test/buildtest_safestack.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_safestack.c
test/buildtest_safestack.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl safestack > $@
test/buildtest_seed: test/buildtest_seed.o libssl.so libcrypto.so
	$(RM) test/buildtest_seed
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_seed OBJECTS="test/buildtest_seed.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_seed.o: test/buildtest_seed.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_seed.c
test/buildtest_seed.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl seed > $@
test/buildtest_sha: test/buildtest_sha.o libssl.so libcrypto.so
	$(RM) test/buildtest_sha
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_sha OBJECTS="test/buildtest_sha.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_sha.o: test/buildtest_sha.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_sha.c
test/buildtest_sha.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl sha > $@
test/buildtest_srp: test/buildtest_srp.o libssl.so libcrypto.so
	$(RM) test/buildtest_srp
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_srp OBJECTS="test/buildtest_srp.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_srp.o: test/buildtest_srp.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_srp.c
test/buildtest_srp.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl srp > $@
test/buildtest_srtp: test/buildtest_srtp.o libssl.so libcrypto.so
	$(RM) test/buildtest_srtp
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_srtp OBJECTS="test/buildtest_srtp.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_srtp.o: test/buildtest_srtp.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_srtp.c
test/buildtest_srtp.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl srtp > $@
test/buildtest_ssl: test/buildtest_ssl.o libssl.so libcrypto.so
	$(RM) test/buildtest_ssl
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ssl OBJECTS="test/buildtest_ssl.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ssl.o: test/buildtest_ssl.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ssl.c
test/buildtest_ssl.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ssl > $@
test/buildtest_ssl2: test/buildtest_ssl2.o libssl.so libcrypto.so
	$(RM) test/buildtest_ssl2
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ssl2 OBJECTS="test/buildtest_ssl2.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ssl2.o: test/buildtest_ssl2.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ssl2.c
test/buildtest_ssl2.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ssl2 > $@
test/buildtest_stack: test/buildtest_stack.o libssl.so libcrypto.so
	$(RM) test/buildtest_stack
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_stack OBJECTS="test/buildtest_stack.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_stack.o: test/buildtest_stack.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_stack.c
test/buildtest_stack.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl stack > $@
test/buildtest_symhacks: test/buildtest_symhacks.o libssl.so libcrypto.so
	$(RM) test/buildtest_symhacks
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_symhacks OBJECTS="test/buildtest_symhacks.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_symhacks.o: test/buildtest_symhacks.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_symhacks.c
test/buildtest_symhacks.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl symhacks > $@
test/buildtest_tls1: test/buildtest_tls1.o libssl.so libcrypto.so
	$(RM) test/buildtest_tls1
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_tls1 OBJECTS="test/buildtest_tls1.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_tls1.o: test/buildtest_tls1.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_tls1.c
test/buildtest_tls1.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl tls1 > $@
test/buildtest_ts: test/buildtest_ts.o libssl.so libcrypto.so
	$(RM) test/buildtest_ts
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ts OBJECTS="test/buildtest_ts.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ts.o: test/buildtest_ts.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ts.c
test/buildtest_ts.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ts > $@
test/buildtest_txt_db: test/buildtest_txt_db.o libssl.so libcrypto.so
	$(RM) test/buildtest_txt_db
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_txt_db OBJECTS="test/buildtest_txt_db.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_txt_db.o: test/buildtest_txt_db.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_txt_db.c
test/buildtest_txt_db.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl txt_db > $@
test/buildtest_ui: test/buildtest_ui.o libssl.so libcrypto.so
	$(RM) test/buildtest_ui
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_ui OBJECTS="test/buildtest_ui.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_ui.o: test/buildtest_ui.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_ui.c
test/buildtest_ui.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl ui > $@
test/buildtest_whrlpool: test/buildtest_whrlpool.o libssl.so libcrypto.so
	$(RM) test/buildtest_whrlpool
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_whrlpool OBJECTS="test/buildtest_whrlpool.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_whrlpool.o: test/buildtest_whrlpool.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_whrlpool.c
test/buildtest_whrlpool.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl whrlpool > $@
test/buildtest_x509: test/buildtest_x509.o libssl.so libcrypto.so
	$(RM) test/buildtest_x509
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_x509 OBJECTS="test/buildtest_x509.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_x509.o: test/buildtest_x509.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_x509.c
test/buildtest_x509.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl x509 > $@
test/buildtest_x509_vfy: test/buildtest_x509_vfy.o libssl.so libcrypto.so
	$(RM) test/buildtest_x509_vfy
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_x509_vfy OBJECTS="test/buildtest_x509_vfy.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_x509_vfy.o: test/buildtest_x509_vfy.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_x509_vfy.c
test/buildtest_x509_vfy.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl x509_vfy > $@
test/buildtest_x509v3: test/buildtest_x509v3.o libssl.so libcrypto.so
	$(RM) test/buildtest_x509v3
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/buildtest_x509v3 OBJECTS="test/buildtest_x509v3.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/buildtest_x509v3.o: test/buildtest_x509v3.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/buildtest_x509v3.c
test/buildtest_x509v3.c: test/generate_buildtest.pl 
	$(PERL) test/generate_buildtest.pl x509v3 > $@
test/casttest: test/casttest.o libcrypto.so
	$(RM) test/casttest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/casttest OBJECTS="test/casttest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/casttest.o: test/casttest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/casttest.c
test/cipherlist_test: test/cipherlist_test.o test/testutil.o libssl.so libcrypto.so
	$(RM) test/cipherlist_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/cipherlist_test OBJECTS="test/cipherlist_test.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/cipherlist_test.o: test/cipherlist_test.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/cipherlist_test.c
test/testutil.o: test/testutil.c
	$(CC)  -I. -Iinclude -I. $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/testutil.c
test/clienthellotest: test/clienthellotest.o libssl.so libcrypto.so
	$(RM) test/clienthellotest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/clienthellotest OBJECTS="test/clienthellotest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/clienthellotest.o: test/clienthellotest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/clienthellotest.c
test/constant_time_test: test/constant_time_test.o libcrypto.so
	$(RM) test/constant_time_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/constant_time_test OBJECTS="test/constant_time_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/constant_time_test.o: test/constant_time_test.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/constant_time_test.c
test/crltest: test/crltest.o test/testutil.o libcrypto.so
	$(RM) test/crltest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/crltest OBJECTS="test/crltest.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/crltest.o: test/crltest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/crltest.c
test/ct_test: test/ct_test.o test/testutil.o libcrypto.so
	$(RM) test/ct_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/ct_test OBJECTS="test/ct_test.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/ct_test.o: test/ct_test.c
	$(CC)  -Icrypto/include -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ct_test.c
test/d2i_test: test/d2i_test.o test/testutil.o libcrypto.so
	$(RM) test/d2i_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/d2i_test OBJECTS="test/d2i_test.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/d2i_test.o: test/d2i_test.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/d2i_test.c
test/danetest: test/danetest.o libssl.so libcrypto.so
	$(RM) test/danetest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/danetest OBJECTS="test/danetest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/danetest.o: test/danetest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/danetest.c
test/destest: test/destest.o libcrypto.so
	$(RM) test/destest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/destest OBJECTS="test/destest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/destest.o: test/destest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/destest.c
test/dhtest: test/dhtest.o libcrypto.so
	$(RM) test/dhtest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/dhtest OBJECTS="test/dhtest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/dhtest.o: test/dhtest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/dhtest.c
test/dsatest: test/dsatest.o libcrypto.so
	$(RM) test/dsatest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/dsatest OBJECTS="test/dsatest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/dsatest.o: test/dsatest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/dsatest.c
test/dtlstest: test/dtlstest.o test/ssltestlib.o test/testutil.o libssl.so libcrypto.so
	$(RM) test/dtlstest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/dtlstest OBJECTS="test/dtlstest.o test/ssltestlib.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/dtlstest.o: test/dtlstest.c
	$(CC)  -Iinclude -Itest $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/dtlstest.c
test/dtlsv1listentest: test/dtlsv1listentest.o libssl.so libcrypto.so
	$(RM) test/dtlsv1listentest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/dtlsv1listentest OBJECTS="test/dtlsv1listentest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/dtlsv1listentest.o: test/dtlsv1listentest.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/dtlsv1listentest.c
test/ecdhtest: test/ecdhtest.o libcrypto.so
	$(RM) test/ecdhtest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/ecdhtest OBJECTS="test/ecdhtest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/ecdhtest.o: test/ecdhtest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ecdhtest.c
test/ecdsatest: test/ecdsatest.o libcrypto.so
	$(RM) test/ecdsatest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/ecdsatest OBJECTS="test/ecdsatest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/ecdsatest.o: test/ecdsatest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ecdsatest.c
test/ectest: test/ectest.o libcrypto.so
	$(RM) test/ectest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/ectest OBJECTS="test/ectest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/ectest.o: test/ectest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ectest.c
test/enginetest: test/enginetest.o libcrypto.so
	$(RM) test/enginetest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/enginetest OBJECTS="test/enginetest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/enginetest.o: test/enginetest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/enginetest.c
test/evp_extra_test: test/evp_extra_test.o libcrypto.so
	$(RM) test/evp_extra_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/evp_extra_test OBJECTS="test/evp_extra_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/evp_extra_test.o: test/evp_extra_test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/evp_extra_test.c
test/evp_test: test/evp_test.o libcrypto.so
	$(RM) test/evp_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/evp_test OBJECTS="test/evp_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/evp_test.o: test/evp_test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/evp_test.c
test/exptest: test/exptest.o libcrypto.so
	$(RM) test/exptest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/exptest OBJECTS="test/exptest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/exptest.o: test/exptest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/exptest.c
test/gmdifftest: test/gmdifftest.o libcrypto.so
	$(RM) test/gmdifftest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/gmdifftest OBJECTS="test/gmdifftest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/gmdifftest.o: test/gmdifftest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/gmdifftest.c
test/heartbeat_test: test/heartbeat_test.o test/testutil.o libssl.so libcrypto.so
	$(RM) test/heartbeat_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/heartbeat_test OBJECTS="test/heartbeat_test.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/heartbeat_test.o: test/heartbeat_test.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/heartbeat_test.c
test/hmactest: test/hmactest.o libcrypto.so
	$(RM) test/hmactest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/hmactest OBJECTS="test/hmactest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/hmactest.o: test/hmactest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/hmactest.c
test/ideatest: test/ideatest.o libcrypto.so
	$(RM) test/ideatest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/ideatest OBJECTS="test/ideatest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/ideatest.o: test/ideatest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ideatest.c
test/igetest: test/igetest.o libcrypto.so
	$(RM) test/igetest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/igetest OBJECTS="test/igetest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/igetest.o: test/igetest.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/igetest.c
test/md2test: test/md2test.o libcrypto.so
	$(RM) test/md2test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/md2test OBJECTS="test/md2test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/md2test.o: test/md2test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/md2test.c
test/md4test: test/md4test.o libcrypto.so
	$(RM) test/md4test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/md4test OBJECTS="test/md4test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/md4test.o: test/md4test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/md4test.c
test/md5test: test/md5test.o libcrypto.so
	$(RM) test/md5test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/md5test OBJECTS="test/md5test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/md5test.o: test/md5test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/md5test.c
test/mdc2test: test/mdc2test.o libcrypto.so
	$(RM) test/mdc2test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/mdc2test OBJECTS="test/mdc2test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/mdc2test.o: test/mdc2test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/mdc2test.c
test/memleaktest: test/memleaktest.o libcrypto.so
	$(RM) test/memleaktest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/memleaktest OBJECTS="test/memleaktest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/memleaktest.o: test/memleaktest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/memleaktest.c
test/p5_crpt2_test: test/p5_crpt2_test.o libcrypto.so
	$(RM) test/p5_crpt2_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/p5_crpt2_test OBJECTS="test/p5_crpt2_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/p5_crpt2_test.o: test/p5_crpt2_test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/p5_crpt2_test.c
test/packettest: test/packettest.o libcrypto.so
	$(RM) test/packettest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/packettest OBJECTS="test/packettest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/packettest.o: test/packettest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/packettest.c
test/pbelutest: test/pbelutest.o libcrypto.so
	$(RM) test/pbelutest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/pbelutest OBJECTS="test/pbelutest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/pbelutest.o: test/pbelutest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/pbelutest.c
test/randtest: test/randtest.o libcrypto.so
	$(RM) test/randtest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/randtest OBJECTS="test/randtest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/randtest.o: test/randtest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/randtest.c
test/rc2test: test/rc2test.o libcrypto.so
	$(RM) test/rc2test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/rc2test OBJECTS="test/rc2test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/rc2test.o: test/rc2test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/rc2test.c
test/rc4test: test/rc4test.o libcrypto.so
	$(RM) test/rc4test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/rc4test OBJECTS="test/rc4test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/rc4test.o: test/rc4test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/rc4test.c
test/rc5test: test/rc5test.o libcrypto.so
	$(RM) test/rc5test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/rc5test OBJECTS="test/rc5test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/rc5test.o: test/rc5test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/rc5test.c
test/rmdtest: test/rmdtest.o libcrypto.so
	$(RM) test/rmdtest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/rmdtest OBJECTS="test/rmdtest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/rmdtest.o: test/rmdtest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/rmdtest.c
test/rsa_test: test/rsa_test.o libcrypto.so
	$(RM) test/rsa_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/rsa_test OBJECTS="test/rsa_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/rsa_test.o: test/rsa_test.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/rsa_test.c
test/sanitytest: test/sanitytest.o libcrypto.so
	$(RM) test/sanitytest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/sanitytest OBJECTS="test/sanitytest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/sanitytest.o: test/sanitytest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/sanitytest.c
test/secmemtest: test/secmemtest.o libcrypto.so
	$(RM) test/secmemtest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/secmemtest OBJECTS="test/secmemtest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/secmemtest.o: test/secmemtest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/secmemtest.c
test/sha1test: test/sha1test.o libcrypto.so
	$(RM) test/sha1test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/sha1test OBJECTS="test/sha1test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/sha1test.o: test/sha1test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/sha1test.c
test/sha256t: test/sha256t.o libcrypto.so
	$(RM) test/sha256t
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/sha256t OBJECTS="test/sha256t.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/sha256t.o: test/sha256t.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/sha256t.c
test/sha512t: test/sha512t.o libcrypto.so
	$(RM) test/sha512t
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/sha512t OBJECTS="test/sha512t.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/sha512t.o: test/sha512t.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/sha512t.c
test/shlibloadtest: test/shlibloadtest.o 
	$(RM) test/shlibloadtest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/shlibloadtest OBJECTS="test/shlibloadtest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '""' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/shlibloadtest.o: test/shlibloadtest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/shlibloadtest.c
test/srptest: test/srptest.o libcrypto.so
	$(RM) test/srptest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/srptest OBJECTS="test/srptest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/srptest.o: test/srptest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/srptest.c
test/ssl_test: test/handshake_helper.o test/ssl_test.o test/ssl_test_ctx.o test/testutil.o libssl.so libcrypto.so
	$(RM) test/ssl_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/ssl_test OBJECTS="test/handshake_helper.o test/ssl_test.o test/ssl_test_ctx.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/handshake_helper.o: test/handshake_helper.c
	$(CC)  -I. -Iinclude -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/handshake_helper.c
test/ssl_test.o: test/ssl_test.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ssl_test.c
test/ssl_test_ctx.o: test/ssl_test_ctx.c
	$(CC)  -I. -Iinclude -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ssl_test_ctx.c
test/ssl_test_ctx_test: test/ssl_test_ctx.o test/ssl_test_ctx_test.o test/testutil.o libcrypto.so
	$(RM) test/ssl_test_ctx_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/ssl_test_ctx_test OBJECTS="test/ssl_test_ctx.o test/ssl_test_ctx_test.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/ssl_test_ctx_test.o: test/ssl_test_ctx_test.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ssl_test_ctx_test.c
test/sslapitest: test/sslapitest.o test/ssltestlib.o test/testutil.o libssl.so libcrypto.so
	$(RM) test/sslapitest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/sslapitest OBJECTS="test/sslapitest.o test/ssltestlib.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/sslapitest.o: test/sslapitest.c
	$(CC)  -Iinclude -I. $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/sslapitest.c
test/sslcorrupttest: test/sslcorrupttest.o test/ssltestlib.o test/testutil.o libssl.so libcrypto.so
	$(RM) test/sslcorrupttest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/sslcorrupttest OBJECTS="test/sslcorrupttest.o test/ssltestlib.o test/testutil.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/sslcorrupttest.o: test/sslcorrupttest.c
	$(CC)  -Iinclude -Itest $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/sslcorrupttest.c
test/ssltest_old: test/ssltest_old.o libssl.so libcrypto.so
	$(RM) test/ssltest_old
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/ssltest_old OBJECTS="test/ssltest_old.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lssl -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/ssltest_old.o: test/ssltest_old.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/ssltest_old.c
test/threadstest: test/threadstest.o libcrypto.so
	$(RM) test/threadstest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/threadstest OBJECTS="test/threadstest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/threadstest.o: test/threadstest.c
	$(CC)  -I. -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/threadstest.c
test/v3ext: test/v3ext.o libcrypto.so
	$(RM) test/v3ext
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/v3ext OBJECTS="test/v3ext.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/v3ext.o: test/v3ext.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/v3ext.c
test/v3nametest: test/v3nametest.o libcrypto.so
	$(RM) test/v3nametest
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/v3nametest OBJECTS="test/v3nametest.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/v3nametest.o: test/v3nametest.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/v3nametest.c
test/verify_extra_test: test/verify_extra_test.o libcrypto.so
	$(RM) test/verify_extra_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/verify_extra_test OBJECTS="test/verify_extra_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/verify_extra_test.o: test/verify_extra_test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/verify_extra_test.c
test/wp_test: test/wp_test.o libcrypto.so
	$(RM) test/wp_test
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/wp_test OBJECTS="test/wp_test.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/wp_test.o: test/wp_test.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/wp_test.c
test/x509aux: test/x509aux.o libcrypto.so
	$(RM) test/x509aux
	$(MAKE) -f $(SRCDIR)/Makefile.shared -e \
		PERL="$(PERL)" SRCDIR=$(SRCDIR) \
		APPNAME=test/x509aux OBJECTS="test/x509aux.o" \
		LIBDEPS='$(PLIB_LDFLAGS) '" -L. -lcrypto"' $(EX_LIBS)' \
		CC='$(CC)' CFLAGS='$(CFLAGS) $(BIN_CFLAGS)' \
		LDFLAGS='$(LDFLAGS)' \
		link_app.linux-shared
test/x509aux.o: test/x509aux.c
	$(CC)  -Iinclude $(CFLAGS) $(BIN_CFLAGS) -c -o $@ test/x509aux.c
apps/CA.pl: apps/CA.pl.in
	$(PERL) "-I$(BLDDIR)" -Mconfigdata "util/dofile.pl" \
	    "-oMakefile" apps/CA.pl.in > "apps/CA.pl"
	chmod a+x apps/CA.pl
apps/tsget: apps/tsget.in
	$(PERL) "-I$(BLDDIR)" -Mconfigdata "util/dofile.pl" \
	    "-oMakefile" apps/tsget.in > "apps/tsget"
	chmod a+x apps/tsget
tools/c_rehash: tools/c_rehash.in
	$(PERL) "-I$(BLDDIR)" -Mconfigdata "util/dofile.pl" \
	    "-oMakefile" tools/c_rehash.in > "tools/c_rehash"
	chmod a+x tools/c_rehash
util/shlib_wrap.sh: util/shlib_wrap.sh.in
	$(PERL) "-I$(BLDDIR)" -Mconfigdata "util/dofile.pl" \
	    "-oMakefile" util/shlib_wrap.sh.in > "util/shlib_wrap.sh"
	chmod a+x util/shlib_wrap.sh
apps apps/: apps/openssl apps/CA.pl apps/tsget
crypto crypto/: crypto/cpt_err.o crypto/cryptlib.o crypto/cversion.o crypto/ebcdic.o crypto/ex_data.o crypto/init.o crypto/mem.o crypto/mem_clr.o crypto/mem_dbg.o crypto/mem_sec.o crypto/o_dir.o crypto/o_fips.o crypto/o_fopen.o crypto/o_init.o crypto/o_str.o crypto/o_time.o crypto/threads_none.o crypto/threads_pthread.o crypto/threads_win.o crypto/uid.o
crypto/aes crypto/aes/: crypto/aes/aes_cbc.o crypto/aes/aes_cfb.o crypto/aes/aes_core.o crypto/aes/aes_ecb.o crypto/aes/aes_ige.o crypto/aes/aes_misc.o crypto/aes/aes_ofb.o crypto/aes/aes_wrap.o
crypto/asn1 crypto/asn1/: crypto/asn1/a_bitstr.o crypto/asn1/a_d2i_fp.o crypto/asn1/a_digest.o crypto/asn1/a_dup.o crypto/asn1/a_gentm.o crypto/asn1/a_i2d_fp.o crypto/asn1/a_int.o crypto/asn1/a_mbstr.o crypto/asn1/a_object.o crypto/asn1/a_octet.o crypto/asn1/a_print.o crypto/asn1/a_sign.o crypto/asn1/a_strex.o crypto/asn1/a_strnid.o crypto/asn1/a_time.o crypto/asn1/a_type.o crypto/asn1/a_utctm.o crypto/asn1/a_utf8.o crypto/asn1/a_verify.o crypto/asn1/ameth_lib.o crypto/asn1/asn1_err.o crypto/asn1/asn1_gen.o crypto/asn1/asn1_lib.o crypto/asn1/asn1_par.o crypto/asn1/asn_mime.o crypto/asn1/asn_moid.o crypto/asn1/asn_mstbl.o crypto/asn1/asn_pack.o crypto/asn1/bio_asn1.o crypto/asn1/bio_ndef.o crypto/asn1/d2i_pr.o crypto/asn1/d2i_pu.o crypto/asn1/evp_asn1.o crypto/asn1/f_int.o crypto/asn1/f_string.o crypto/asn1/i2d_pr.o crypto/asn1/i2d_pu.o crypto/asn1/n_pkey.o crypto/asn1/nsseq.o crypto/asn1/p5_pbe.o crypto/asn1/p5_pbev2.o crypto/asn1/p5_scrypt.o crypto/asn1/p8_pkey.o crypto/asn1/t_bitst.o crypto/asn1/t_pkey.o crypto/asn1/t_spki.o crypto/asn1/tasn_dec.o crypto/asn1/tasn_enc.o crypto/asn1/tasn_fre.o crypto/asn1/tasn_new.o crypto/asn1/tasn_prn.o crypto/asn1/tasn_scn.o crypto/asn1/tasn_typ.o crypto/asn1/tasn_utl.o crypto/asn1/x_algor.o crypto/asn1/x_bignum.o crypto/asn1/x_info.o crypto/asn1/x_long.o crypto/asn1/x_pkey.o crypto/asn1/x_sig.o crypto/asn1/x_spki.o crypto/asn1/x_val.o
crypto/async crypto/async/: crypto/async/async.o crypto/async/async_err.o crypto/async/async_wait.o
crypto/async/arch crypto/async/arch/: crypto/async/arch/async_null.o crypto/async/arch/async_posix.o crypto/async/arch/async_win.o
crypto/bf crypto/bf/: crypto/bf/bf_cfb64.o crypto/bf/bf_ecb.o crypto/bf/bf_enc.o crypto/bf/bf_ofb64.o crypto/bf/bf_skey.o
crypto/bio crypto/bio/: crypto/bio/b_addr.o crypto/bio/b_dump.o crypto/bio/b_print.o crypto/bio/b_sock.o crypto/bio/b_sock2.o crypto/bio/bf_buff.o crypto/bio/bf_lbuf.o crypto/bio/bf_nbio.o crypto/bio/bf_null.o crypto/bio/bio_cb.o crypto/bio/bio_err.o crypto/bio/bio_lib.o crypto/bio/bio_meth.o crypto/bio/bss_acpt.o crypto/bio/bss_bio.o crypto/bio/bss_conn.o crypto/bio/bss_dgram.o crypto/bio/bss_fd.o crypto/bio/bss_file.o crypto/bio/bss_log.o crypto/bio/bss_mem.o crypto/bio/bss_null.o crypto/bio/bss_sock.o
crypto/blake2 crypto/blake2/: crypto/blake2/blake2b.o crypto/blake2/blake2s.o crypto/blake2/m_blake2b.o crypto/blake2/m_blake2s.o
crypto/bn crypto/bn/: crypto/bn/bn_add.o crypto/bn/bn_asm.o crypto/bn/bn_blind.o crypto/bn/bn_const.o crypto/bn/bn_ctx.o crypto/bn/bn_depr.o crypto/bn/bn_dh.o crypto/bn/bn_div.o crypto/bn/bn_err.o crypto/bn/bn_exp.o crypto/bn/bn_exp2.o crypto/bn/bn_gcd.o crypto/bn/bn_gf2m.o crypto/bn/bn_intern.o crypto/bn/bn_kron.o crypto/bn/bn_lib.o crypto/bn/bn_mod.o crypto/bn/bn_mont.o crypto/bn/bn_mpi.o crypto/bn/bn_mul.o crypto/bn/bn_nist.o crypto/bn/bn_prime.o crypto/bn/bn_print.o crypto/bn/bn_rand.o crypto/bn/bn_recp.o crypto/bn/bn_shift.o crypto/bn/bn_sqr.o crypto/bn/bn_sqrt.o crypto/bn/bn_srp.o crypto/bn/bn_word.o crypto/bn/bn_x931p.o
crypto/buffer crypto/buffer/: crypto/buffer/buf_err.o crypto/buffer/buffer.o
crypto/camellia crypto/camellia/: crypto/camellia/camellia.o crypto/camellia/cmll_cbc.o crypto/camellia/cmll_cfb.o crypto/camellia/cmll_ctr.o crypto/camellia/cmll_ecb.o crypto/camellia/cmll_misc.o crypto/camellia/cmll_ofb.o
crypto/cast crypto/cast/: crypto/cast/c_cfb64.o crypto/cast/c_ecb.o crypto/cast/c_enc.o crypto/cast/c_ofb64.o crypto/cast/c_skey.o
crypto/chacha crypto/chacha/: crypto/chacha/chacha_enc.o
crypto/cmac crypto/cmac/: crypto/cmac/cm_ameth.o crypto/cmac/cm_pmeth.o crypto/cmac/cmac.o
crypto/cms crypto/cms/: crypto/cms/cms_asn1.o crypto/cms/cms_att.o crypto/cms/cms_cd.o crypto/cms/cms_dd.o crypto/cms/cms_enc.o crypto/cms/cms_env.o crypto/cms/cms_err.o crypto/cms/cms_ess.o crypto/cms/cms_io.o crypto/cms/cms_kari.o crypto/cms/cms_lib.o crypto/cms/cms_pwri.o crypto/cms/cms_sd.o crypto/cms/cms_smime.o
crypto/comp crypto/comp/: crypto/comp/c_zlib.o crypto/comp/comp_err.o crypto/comp/comp_lib.o
crypto/conf crypto/conf/: crypto/conf/conf_api.o crypto/conf/conf_def.o crypto/conf/conf_err.o crypto/conf/conf_lib.o crypto/conf/conf_mall.o crypto/conf/conf_mod.o crypto/conf/conf_sap.o
crypto/ct crypto/ct/: crypto/ct/ct_b64.o crypto/ct/ct_err.o crypto/ct/ct_log.o crypto/ct/ct_oct.o crypto/ct/ct_policy.o crypto/ct/ct_prn.o crypto/ct/ct_sct.o crypto/ct/ct_sct_ctx.o crypto/ct/ct_vfy.o crypto/ct/ct_x509v3.o
crypto/des crypto/des/: crypto/des/cbc_cksm.o crypto/des/cbc_enc.o crypto/des/cfb64ede.o crypto/des/cfb64enc.o crypto/des/cfb_enc.o crypto/des/des_enc.o crypto/des/ecb3_enc.o crypto/des/ecb_enc.o crypto/des/fcrypt.o crypto/des/fcrypt_b.o crypto/des/ofb64ede.o crypto/des/ofb64enc.o crypto/des/ofb_enc.o crypto/des/pcbc_enc.o crypto/des/qud_cksm.o crypto/des/rand_key.o crypto/des/rpc_enc.o crypto/des/set_key.o crypto/des/str2key.o crypto/des/xcbc_enc.o
crypto/dh crypto/dh/: crypto/dh/dh_ameth.o crypto/dh/dh_asn1.o crypto/dh/dh_check.o crypto/dh/dh_depr.o crypto/dh/dh_err.o crypto/dh/dh_gen.o crypto/dh/dh_kdf.o crypto/dh/dh_key.o crypto/dh/dh_lib.o crypto/dh/dh_meth.o crypto/dh/dh_pmeth.o crypto/dh/dh_prn.o crypto/dh/dh_rfc5114.o
crypto/dsa crypto/dsa/: crypto/dsa/dsa_ameth.o crypto/dsa/dsa_asn1.o crypto/dsa/dsa_depr.o crypto/dsa/dsa_err.o crypto/dsa/dsa_gen.o crypto/dsa/dsa_key.o crypto/dsa/dsa_lib.o crypto/dsa/dsa_meth.o crypto/dsa/dsa_ossl.o crypto/dsa/dsa_pmeth.o crypto/dsa/dsa_prn.o crypto/dsa/dsa_sign.o crypto/dsa/dsa_vrf.o
crypto/dso crypto/dso/: crypto/dso/dso_dl.o crypto/dso/dso_dlfcn.o crypto/dso/dso_err.o crypto/dso/dso_lib.o crypto/dso/dso_openssl.o crypto/dso/dso_vms.o crypto/dso/dso_win32.o
crypto/ec crypto/ec/: crypto/ec/curve25519.o crypto/ec/ec2_mult.o crypto/ec/ec2_oct.o crypto/ec/ec2_smpl.o crypto/ec/ec_ameth.o crypto/ec/ec_asn1.o crypto/ec/ec_check.o crypto/ec/ec_curve.o crypto/ec/ec_cvt.o crypto/ec/ec_err.o crypto/ec/ec_key.o crypto/ec/ec_kmeth.o crypto/ec/ec_lib.o crypto/ec/ec_mult.o crypto/ec/ec_oct.o crypto/ec/ec_pmeth.o crypto/ec/ec_print.o crypto/ec/ecdh_kdf.o crypto/ec/ecdh_ossl.o crypto/ec/ecdsa_ossl.o crypto/ec/ecdsa_sign.o crypto/ec/ecdsa_vrf.o crypto/ec/eck_prn.o crypto/ec/ecp_mont.o crypto/ec/ecp_nist.o crypto/ec/ecp_nistp224.o crypto/ec/ecp_nistp256.o crypto/ec/ecp_nistp521.o crypto/ec/ecp_nistputil.o crypto/ec/ecp_oct.o crypto/ec/ecp_smpl.o crypto/ec/ecx_meth.o
crypto/engine crypto/engine/: crypto/engine/eng_all.o crypto/engine/eng_cnf.o crypto/engine/eng_cryptodev.o crypto/engine/eng_ctrl.o crypto/engine/eng_dyn.o crypto/engine/eng_err.o crypto/engine/eng_fat.o crypto/engine/eng_init.o crypto/engine/eng_lib.o crypto/engine/eng_list.o crypto/engine/eng_openssl.o crypto/engine/eng_pkey.o crypto/engine/eng_rdrand.o crypto/engine/eng_table.o crypto/engine/tb_asnmth.o crypto/engine/tb_cipher.o crypto/engine/tb_dh.o crypto/engine/tb_digest.o crypto/engine/tb_dsa.o crypto/engine/tb_eckey.o crypto/engine/tb_pkmeth.o crypto/engine/tb_rand.o crypto/engine/tb_rsa.o
crypto/err crypto/err/: crypto/err/err.o crypto/err/err_all.o crypto/err/err_prn.o
crypto/evp crypto/evp/: crypto/evp/bio_b64.o crypto/evp/bio_enc.o crypto/evp/bio_md.o crypto/evp/bio_ok.o crypto/evp/c_allc.o crypto/evp/c_alld.o crypto/evp/cmeth_lib.o crypto/evp/digest.o crypto/evp/e_aes.o crypto/evp/e_aes_cbc_hmac_sha1.o crypto/evp/e_aes_cbc_hmac_sha256.o crypto/evp/e_bf.o crypto/evp/e_camellia.o crypto/evp/e_cast.o crypto/evp/e_chacha20_poly1305.o crypto/evp/e_des.o crypto/evp/e_des3.o crypto/evp/e_idea.o crypto/evp/e_null.o crypto/evp/e_old.o crypto/evp/e_rc2.o crypto/evp/e_rc4.o crypto/evp/e_rc4_hmac_md5.o crypto/evp/e_rc5.o crypto/evp/e_seed.o crypto/evp/e_xcbc_d.o crypto/evp/encode.o crypto/evp/evp_cnf.o crypto/evp/evp_enc.o crypto/evp/evp_err.o crypto/evp/evp_key.o crypto/evp/evp_lib.o crypto/evp/evp_pbe.o crypto/evp/evp_pkey.o crypto/evp/m_md2.o crypto/evp/m_md4.o crypto/evp/m_md5.o crypto/evp/m_md5_sha1.o crypto/evp/m_mdc2.o crypto/evp/m_null.o crypto/evp/m_ripemd.o crypto/evp/m_sha1.o crypto/evp/m_sigver.o crypto/evp/m_wp.o crypto/evp/names.o crypto/evp/p5_crpt.o crypto/evp/p5_crpt2.o crypto/evp/p_dec.o crypto/evp/p_enc.o crypto/evp/p_lib.o crypto/evp/p_open.o crypto/evp/p_seal.o crypto/evp/p_sign.o crypto/evp/p_verify.o crypto/evp/pmeth_fn.o crypto/evp/pmeth_gn.o crypto/evp/pmeth_lib.o crypto/evp/scrypt.o
crypto/hmac crypto/hmac/: crypto/hmac/hm_ameth.o crypto/hmac/hm_pmeth.o crypto/hmac/hmac.o
crypto/idea crypto/idea/: crypto/idea/i_cbc.o crypto/idea/i_cfb64.o crypto/idea/i_ecb.o crypto/idea/i_ofb64.o crypto/idea/i_skey.o
crypto/kdf crypto/kdf/: crypto/kdf/hkdf.o crypto/kdf/kdf_err.o crypto/kdf/tls1_prf.o
crypto/lhash crypto/lhash/: crypto/lhash/lh_stats.o crypto/lhash/lhash.o
crypto/md4 crypto/md4/: crypto/md4/md4_dgst.o crypto/md4/md4_one.o
crypto/md5 crypto/md5/: crypto/md5/md5_dgst.o crypto/md5/md5_one.o
crypto/mdc2 crypto/mdc2/: crypto/mdc2/mdc2_one.o crypto/mdc2/mdc2dgst.o
crypto/modes crypto/modes/: crypto/modes/cbc128.o crypto/modes/ccm128.o crypto/modes/cfb128.o crypto/modes/ctr128.o crypto/modes/cts128.o crypto/modes/gcm128.o crypto/modes/ocb128.o crypto/modes/ofb128.o crypto/modes/wrap128.o crypto/modes/xts128.o
crypto/objects crypto/objects/: crypto/objects/o_names.o crypto/objects/obj_dat.o crypto/objects/obj_err.o crypto/objects/obj_lib.o crypto/objects/obj_xref.o
crypto/ocsp crypto/ocsp/: crypto/ocsp/ocsp_asn.o crypto/ocsp/ocsp_cl.o crypto/ocsp/ocsp_err.o crypto/ocsp/ocsp_ext.o crypto/ocsp/ocsp_ht.o crypto/ocsp/ocsp_lib.o crypto/ocsp/ocsp_prn.o crypto/ocsp/ocsp_srv.o crypto/ocsp/ocsp_vfy.o crypto/ocsp/v3_ocsp.o
crypto/pem crypto/pem/: crypto/pem/pem_all.o crypto/pem/pem_err.o crypto/pem/pem_info.o crypto/pem/pem_lib.o crypto/pem/pem_oth.o crypto/pem/pem_pk8.o crypto/pem/pem_pkey.o crypto/pem/pem_sign.o crypto/pem/pem_x509.o crypto/pem/pem_xaux.o crypto/pem/pvkfmt.o
crypto/pkcs12 crypto/pkcs12/: crypto/pkcs12/p12_add.o crypto/pkcs12/p12_asn.o crypto/pkcs12/p12_attr.o crypto/pkcs12/p12_crpt.o crypto/pkcs12/p12_crt.o crypto/pkcs12/p12_decr.o crypto/pkcs12/p12_init.o crypto/pkcs12/p12_key.o crypto/pkcs12/p12_kiss.o crypto/pkcs12/p12_mutl.o crypto/pkcs12/p12_npas.o crypto/pkcs12/p12_p8d.o crypto/pkcs12/p12_p8e.o crypto/pkcs12/p12_sbag.o crypto/pkcs12/p12_utl.o crypto/pkcs12/pk12err.o
crypto/pkcs7 crypto/pkcs7/: crypto/pkcs7/bio_pk7.o crypto/pkcs7/pk7_asn1.o crypto/pkcs7/pk7_attr.o crypto/pkcs7/pk7_doit.o crypto/pkcs7/pk7_lib.o crypto/pkcs7/pk7_mime.o crypto/pkcs7/pk7_smime.o crypto/pkcs7/pkcs7err.o
crypto/poly1305 crypto/poly1305/: crypto/poly1305/poly1305.o
crypto/rand crypto/rand/: crypto/rand/md_rand.o crypto/rand/rand_egd.o crypto/rand/rand_err.o crypto/rand/rand_lib.o crypto/rand/rand_unix.o crypto/rand/rand_vms.o crypto/rand/rand_win.o crypto/rand/randfile.o
crypto/rc2 crypto/rc2/: crypto/rc2/rc2_cbc.o crypto/rc2/rc2_ecb.o crypto/rc2/rc2_skey.o crypto/rc2/rc2cfb64.o crypto/rc2/rc2ofb64.o
crypto/rc4 crypto/rc4/: crypto/rc4/rc4_enc.o crypto/rc4/rc4_skey.o
crypto/ripemd crypto/ripemd/: crypto/ripemd/rmd_dgst.o crypto/ripemd/rmd_one.o
crypto/rsa crypto/rsa/: crypto/rsa/rsa_ameth.o crypto/rsa/rsa_asn1.o crypto/rsa/rsa_chk.o crypto/rsa/rsa_crpt.o crypto/rsa/rsa_depr.o crypto/rsa/rsa_err.o crypto/rsa/rsa_gen.o crypto/rsa/rsa_lib.o crypto/rsa/rsa_meth.o crypto/rsa/rsa_none.o crypto/rsa/rsa_null.o crypto/rsa/rsa_oaep.o crypto/rsa/rsa_ossl.o crypto/rsa/rsa_pk1.o crypto/rsa/rsa_pmeth.o crypto/rsa/rsa_prn.o crypto/rsa/rsa_pss.o crypto/rsa/rsa_saos.o crypto/rsa/rsa_sign.o crypto/rsa/rsa_ssl.o crypto/rsa/rsa_x931.o crypto/rsa/rsa_x931g.o
crypto/seed crypto/seed/: crypto/seed/seed.o crypto/seed/seed_cbc.o crypto/seed/seed_cfb.o crypto/seed/seed_ecb.o crypto/seed/seed_ofb.o
crypto/sha crypto/sha/: crypto/sha/sha1_one.o crypto/sha/sha1dgst.o crypto/sha/sha256.o crypto/sha/sha512.o
crypto/srp crypto/srp/: crypto/srp/srp_lib.o crypto/srp/srp_vfy.o
crypto/stack crypto/stack/: crypto/stack/stack.o
crypto/ts crypto/ts/: crypto/ts/ts_asn1.o crypto/ts/ts_conf.o crypto/ts/ts_err.o crypto/ts/ts_lib.o crypto/ts/ts_req_print.o crypto/ts/ts_req_utils.o crypto/ts/ts_rsp_print.o crypto/ts/ts_rsp_sign.o crypto/ts/ts_rsp_utils.o crypto/ts/ts_rsp_verify.o crypto/ts/ts_verify_ctx.o
crypto/txt_db crypto/txt_db/: crypto/txt_db/txt_db.o
crypto/ui crypto/ui/: crypto/ui/ui_err.o crypto/ui/ui_lib.o crypto/ui/ui_openssl.o crypto/ui/ui_util.o
crypto/whrlpool crypto/whrlpool/: crypto/whrlpool/wp_block.o crypto/whrlpool/wp_dgst.o
crypto/x509 crypto/x509/: crypto/x509/by_dir.o crypto/x509/by_file.o crypto/x509/t_crl.o crypto/x509/t_req.o crypto/x509/t_x509.o crypto/x509/x509_att.o crypto/x509/x509_cmp.o crypto/x509/x509_d2.o crypto/x509/x509_def.o crypto/x509/x509_err.o crypto/x509/x509_ext.o crypto/x509/x509_lu.o crypto/x509/x509_obj.o crypto/x509/x509_r2x.o crypto/x509/x509_req.o crypto/x509/x509_set.o crypto/x509/x509_trs.o crypto/x509/x509_txt.o crypto/x509/x509_v3.o crypto/x509/x509_vfy.o crypto/x509/x509_vpm.o crypto/x509/x509cset.o crypto/x509/x509name.o crypto/x509/x509rset.o crypto/x509/x509spki.o crypto/x509/x509type.o crypto/x509/x_all.o crypto/x509/x_attrib.o crypto/x509/x_crl.o crypto/x509/x_exten.o crypto/x509/x_name.o crypto/x509/x_pubkey.o crypto/x509/x_req.o crypto/x509/x_x509.o crypto/x509/x_x509a.o
crypto/x509v3 crypto/x509v3/: crypto/x509v3/pcy_cache.o crypto/x509v3/pcy_data.o crypto/x509v3/pcy_lib.o crypto/x509v3/pcy_map.o crypto/x509v3/pcy_node.o crypto/x509v3/pcy_tree.o crypto/x509v3/v3_addr.o crypto/x509v3/v3_akey.o crypto/x509v3/v3_akeya.o crypto/x509v3/v3_alt.o crypto/x509v3/v3_asid.o crypto/x509v3/v3_bcons.o crypto/x509v3/v3_bitst.o crypto/x509v3/v3_conf.o crypto/x509v3/v3_cpols.o crypto/x509v3/v3_crld.o crypto/x509v3/v3_enum.o crypto/x509v3/v3_extku.o crypto/x509v3/v3_genn.o crypto/x509v3/v3_ia5.o crypto/x509v3/v3_info.o crypto/x509v3/v3_int.o crypto/x509v3/v3_lib.o crypto/x509v3/v3_ncons.o crypto/x509v3/v3_pci.o crypto/x509v3/v3_pcia.o crypto/x509v3/v3_pcons.o crypto/x509v3/v3_pku.o crypto/x509v3/v3_pmaps.o crypto/x509v3/v3_prn.o crypto/x509v3/v3_purp.o crypto/x509v3/v3_skey.o crypto/x509v3/v3_sxnet.o crypto/x509v3/v3_tlsf.o crypto/x509v3/v3_utl.o crypto/x509v3/v3err.o
engines engines/: engines/capi.so engines/dasync.so engines/ossltest.so engines/padlock.so
fuzz fuzz/: fuzz/asn1-test fuzz/asn1parse-test fuzz/bignum-test fuzz/bndiv-test fuzz/cms-test fuzz/conf-test fuzz/crl-test fuzz/ct-test fuzz/server-test fuzz/x509-test
ssl ssl/: ssl/bio_ssl.o ssl/d1_lib.o ssl/d1_msg.o ssl/d1_srtp.o ssl/methods.o ssl/pqueue.o ssl/s3_cbc.o ssl/s3_enc.o ssl/s3_lib.o ssl/s3_msg.o ssl/ssl_asn1.o ssl/ssl_cert.o ssl/ssl_ciph.o ssl/ssl_conf.o ssl/ssl_err.o ssl/ssl_init.o ssl/ssl_lib.o ssl/ssl_mcnf.o ssl/ssl_rsa.o ssl/ssl_sess.o ssl/ssl_stat.o ssl/ssl_txt.o ssl/ssl_utst.o ssl/t1_enc.o ssl/t1_ext.o ssl/t1_lib.o ssl/t1_reneg.o ssl/t1_trce.o ssl/tls_srp.o
ssl/record ssl/record/: ssl/record/dtls1_bitmap.o ssl/record/rec_layer_d1.o ssl/record/rec_layer_s3.o ssl/record/ssl3_buffer.o ssl/record/ssl3_record.o
ssl/statem ssl/statem/: ssl/statem/statem.o ssl/statem/statem_clnt.o ssl/statem/statem_dtls.o ssl/statem/statem_lib.o ssl/statem/statem_srvr.o
tools tools/: tools/c_rehash
util util/: util/shlib_wrap.sh
crypto/md5/md5-ia64.s: crypto/md5/asm/md5-ia64.S
	$(CC) $(CFLAGS) -E crypto/md5/asm/md5-ia64.S | 	$(PERL) -ne 's/;\s+/;\n/g; print;' > $@

##### SHA assembler implementations

# GNU make "catch all"
crypto/sha/sha1-%.S:	crypto/sha/asm/sha1-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@
crypto/sha/sha256-%.S:	crypto/sha/asm/sha512-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@
crypto/sha/sha512-%.S:	crypto/sha/asm/sha512-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@
crypto/poly1305/poly1305-%.S:	crypto/poly1305/asm/poly1305-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@
##### AES assembler implementations

# GNU make "catch all"
crypto/aes/aes-%.S:	crypto/aes/asm/aes-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@
crypto/aes/bsaes-%.S:	crypto/aes/asm/bsaes-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@

crypto/rc4/rc4-ia64.s: crypto/rc4/asm/rc4-ia64.pl
	@(trap "rm $@.*" INT 0; 	  $(PERL) $< $(CFLAGS) $(LIB_CFLAGS) $@.S; 	  case `awk '/^#define RC4_INT/{print$$NF}' $(BLDDIR)/include/openssl/opensslconf.h` in 	  int)	set -x; $(CC) $(CFLAGS) $(LIB_CFLAGS) -DSZ=4 -E $@.S > $@.i && mv -f $@.i $@;; 	  char)	set -x; $(CC) $(CFLAGS) $(LIB_CFLAGS) -DSZ=1 -E $@.S > $@.i && mv -f $@.i $@;; 	  *)	exit 1 ;; 	  esac )

# GNU make "catch all"
crypto/rc4/rc4-%.s:	crypto/rc4/asm/rc4-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@
##### CHACHA assembler implementations

crypto/chacha/chacha-%.S:	crypto/chacha/asm/chacha-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@
# GNU make "catch all"
crypto/modes/ghash-%.S:	crypto/modes/asm/ghash-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@
##### BN assembler implementations

crypto/bn/bn-mips3.o:	crypto/bn/asm/mips3.s
	@if [ "$(CC)" = "gcc" ]; then 		ABI=`expr "$(CFLAGS)" : ".*-mabi=\([n3264]*\)"` && 		as -$$ABI -O -o $@ crypto/bn/asm/mips3.s; 	else	$(CC) -c $(CFLAGS) $(LIB_CFLAGS) -o $@ crypto/bn/asm/mips3.s; fi

# GNU assembler fails to compile PA-RISC2 modules, insist on calling
# vendor assembler...
crypto/bn/pa-risc2W.o: crypto/bn/asm/pa-risc2W.s
	CC="$(CC)" $(PERL) $(SRCDIR)/util/fipsas.pl $(SRCDIR) $< /usr/ccs/bin/as -o pa-risc2W.o crypto/bn/asm/pa-risc2W.s
crypto/bn/pa-risc2.o: crypto/bn/asm/pa-risc2.s
	CC="$(CC)" $(PERL) $(SRCDIR)/util/fipsas.pl $(SRCDIR) $< /usr/ccs/bin/as -o pa-risc2.o crypto/bn/asm/pa-risc2.s

crypto/ec/ecp_nistz256-%.S:	crypto/ec/asm/ecp_nistz256-%.pl
	CC="$(CC)" $(PERL) $< $(PERLASM_SCHEME) $@

